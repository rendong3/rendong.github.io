<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>龙芯--自主架构先驱者</title>
    <link href="/2024/02/13/%E9%BE%99%E8%8A%AF--%E8%87%AA%E4%B8%BB%E6%9E%B6%E6%9E%84%E5%85%88%E9%A9%B1%E8%80%85/"/>
    <url>/2024/02/13/%E9%BE%99%E8%8A%AF--%E8%87%AA%E4%B8%BB%E6%9E%B6%E6%9E%84%E5%85%88%E9%A9%B1%E8%80%85/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这是ren_dong的第<strong>23</strong>篇原创</p></blockquote><h1 id="龙芯–自主架构先驱者"><a href="#龙芯–自主架构先驱者" class="headerlink" title="龙芯–自主架构先驱者"></a>龙芯–自主架构先驱者</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><blockquote><p><strong>自主可控最高的 MIPS 架构 CPU</strong></p></blockquote><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010959962.png"></p><ul><li>龙芯是我国最早研制的高性能通用处理器系列，拥有 MIPS 指令的永久授权，并拓展出了自己的指令集loong ISA。</li><li>龙芯采用<strong>自主 Loong ISA 指令系统</strong>，兼容 MIPS 指令，所有 IP 模块皆为自主设计，拥有片内安全机制</li><li>龙芯处理器以 32 位核、 64 位单核及多核 CPU&#x2F;SOC 为主，主要面向高端嵌入式、个人电脑、服务器和高性能机等应用</li></ul><h2 id="2、发展历程"><a href="#2、发展历程" class="headerlink" title="2、发展历程"></a>2、发展历程</h2><blockquote><p>从MIPS授权到自主研发LoongArch</p></blockquote><ol><li>2008年公司成立，前身出自中科院计算机所</li><li>2009年一次性买断，获得MIPS32和MIPS64架构的永久授权</li><li>2020前一直基于MIPS，此后在MIPS固有指令集添加自主研发指令集，研发出自主知识产权的<strong>龙芯指令集（LoogISA）</strong></li><li>2021年信息技术应用创新主论坛发布<strong>龙芯自主指令系统架构（LoongArch）</strong></li><li>2021年开始市场化运作，2022年6月在科创板上市</li></ol><p><img src="https://files.mdnice.com/user/17335/1606c911-e0fc-42f5-a89f-1fb70d721753.png"></p><p><img src="https://files.mdnice.com/user/17335/5b5a714d-4117-4911-9a1c-08c9e0a18111.png"></p><h2 id="3、产品体系"><a href="#3、产品体系" class="headerlink" title="3、产品体系"></a>3、产品体系</h2><ol><li>公司经营主要采用Fabless模式：公司主要负责芯片的设计工作，形成集成电路设计版图 ，将晶圆制造、封装、部分测试等环节委托给相关制造企业及代工厂商加工完成。</li><li>龙芯产品均基于<strong>自研的LoongArch 架构</strong>，主要包括面向行业应用的“<strong>龙芯 1 号</strong>”小 CPU、面向工控和终端类应用的“<strong>龙芯 2 号</strong>”中 CPU、以及面向桌面与服务器类应用的“<strong>龙芯 3 号</strong>”大 CPU</li></ol><p><img src="https://files.mdnice.com/user/17335/6b29c888-baf3-42f8-9a3c-4a7a0325f4b7.png"></p><h2 id="4、产品介绍"><a href="#4、产品介绍" class="headerlink" title="4、产品介绍"></a>4、产品介绍</h2><h3 id="4-1、龙芯3A-3B5000"><a href="#4-1、龙芯3A-3B5000" class="headerlink" title="4.1、龙芯3A&#x2F;3B5000"></a>4.1、龙芯3A&#x2F;3B5000</h3><ul><li>龙芯3A5000是龙芯中科最新款桌面CPU，基于LoongArch指令集，基于龙芯3A4000引脚兼容，频率提升至2.5GHz，功耗降低30%，性能提升50%以上</li><li>龙芯3B5000在龙芯3A5000基础上支持多路互联</li></ul><p><img src="https://files.mdnice.com/user/17335/9b7acc46-8d8d-49e2-954a-5b7a5cb4bb8f.png"></p><h3 id="4-2、龙芯3C5000L"><a href="#4-2、龙芯3C5000L" class="headerlink" title="4.2、龙芯3C5000L"></a>4.2、龙芯3C5000L</h3><ul><li>龙芯3C5000L封装集成4个3A5000，形成16核处理器<br><img src="https://files.mdnice.com/user/17335/c466a51c-4dac-4f5a-9781-e215ca07e2a2.png"></li></ul><h3 id="4-3、龙芯3A6000"><a href="#4-3、龙芯3A6000" class="headerlink" title="4.3、龙芯3A6000"></a>4.3、龙芯3A6000</h3><ul><li>龙芯第四代微架构首款处理器，面向高端嵌入式计算机、桌面、服务器等应用。</li><li>采用自主龙芯指令集（LoongArch™），基于全新研制的LA664处理器核，较龙芯3A5000单核定&#x2F;浮点性能分别提升60%和90%，多核定&#x2F;浮点性能分别提升100%和90%。</li><li>龙芯3A6000处理器 SPEC CPU 2006 Base单线程定&#x2F;浮点分值分别达到43.1&#x2F;54.6分，达到国际市场主流水平</li></ul><p><img src="https://files.mdnice.com/user/17335/4308b39c-d059-4a6e-9fad-8b4fcaad90ba.png"></p><h2 id="5、劣势"><a href="#5、劣势" class="headerlink" title="5、劣势"></a>5、劣势</h2><ol><li><p><strong>多核性能弱</strong>：龙芯CPU是我国最早的国产CPU厂商，但其更集中于专用类、嵌入式 CPU，通用类 CPU 单核性能较高，但多核能力较弱</p></li><li><p><strong>生态差</strong>：龙芯是国内唯一基于 MIPS 架构的国产 CPU，在生态构建方面劣势明显</p></li></ol><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><ul><li>码字不易，欢迎<strong>关注、点赞</strong>，感谢支持！</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>信创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>鲲鹏--垂直生态领导者</title>
    <link href="/2024/02/12/%E9%B2%B2%E9%B9%8F--%E5%9E%82%E7%9B%B4%E7%94%9F%E6%80%81%E9%A2%86%E5%AF%BC%E8%80%85/"/>
    <url>/2024/02/12/%E9%B2%B2%E9%B9%8F--%E5%9E%82%E7%9B%B4%E7%94%9F%E6%80%81%E9%A2%86%E5%AF%BC%E8%80%85/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这是ren_dong的第<strong>25</strong>篇原创</p></blockquote><h1 id="鲲鹏–垂直生态领导者"><a href="#鲲鹏–垂直生态领导者" class="headerlink" title="鲲鹏–垂直生态领导者"></a>鲲鹏–垂直生态领导者</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><blockquote><p><strong>华为鲲鹏920：性能最高的ARM架构服务器芯片</strong></p></blockquote><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011026401.png" alt="image-20240201102649888"></p><ul><li>鲲鹏是华为在芯片领域布局的重要一环 ，是垂直生态的领导者，鲲鹏芯片诞生于2020年 ，已获得<strong>ARMv8架构的永久授权</strong>，主要聚焦通用计算领域</li><li>华为针对不同的计算场景 ，自研打造了一系列芯片矩阵 ，除了主要应用在服务器领域的鲲鹏 ，还包括<strong>手机SoC芯片麒麟、人工智能芯片昇腾、 5G基站芯片天罡、 5G终端芯片巴龙 ，以及凌霄、 NB IoT</strong>等一系列其他专用芯片</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011059182.png" alt="image-20240201105930052"></p><h2 id="2、发展历程"><a href="#2、发展历程" class="headerlink" title="2、发展历程"></a>2、发展历程</h2><ol><li>华为基于kunpeng处理器打造了“<strong>算、存、传、管、智</strong>”五个子系统的芯片族</li><li>2019年1月，华为发布基于ARM v8指令集研发的高性能服务器处理器鲲鹏920，是业界性能最高的ARM架构服务器芯片</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011051526.png" alt="image-20240201103254613"></p><ol start="3"><li>华为鲲鹏处理器，坚持持续创新，自研内核，进行芯片架构创新，引领计算趋势</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011121472.png" alt="image-20240201112145363"></p><h2 id="3、产品体系"><a href="#3、产品体系" class="headerlink" title="3、产品体系"></a>3、产品体系</h2><ol><li>鲲鹏计算产业是基于鲲鹏处理器构建的全栈IT基础设施、行业应用及服务，<strong>拥有完备的技术和商业基础</strong>，计划分三个阶段实现</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011102028.png" alt="image-20240201105807499"></p><ol start="2"><li><strong>硬件、软件、行业应用三位一体</strong>发展鲲鹏产业</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011101437.png" alt="image-20240201110134344"></p><ol start="3"><li>鲲鹏生态带来国产IT行业的升级，是计算产业新格局的开启</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011103088.png" alt="image-20240201110259963"></p><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011103586.png" alt="image-20240201110315469"></p><h2 id="4、产品介绍"><a href="#4、产品介绍" class="headerlink" title="4、产品介绍"></a>4、产品介绍</h2><blockquote><p>全面创“芯”，构建<strong>全自研服务器TaiShan</strong></p></blockquote><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011114604.png" alt="image-20240201111406472"></p><h3 id="4-1、TaiShan-200服务器-2480高性能型"><a href="#4-1、TaiShan-200服务器-2480高性能型" class="headerlink" title="4.1、TaiShan 200服务器 2480高性能型"></a>4.1、TaiShan 200服务器 2480高性能型</h3><ul><li>华为2480高性能服务器基于鲲鹏920处理器，最高能够提供256核、2.6GHz主频的计算能力</li><li>该服务器具有计算密度高、存储性能好以及网络速度快的特点，适合为高性能计算、数据库、云计算等应用场景的工作负载进行高效加速</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011105445.png" alt="image-20240201110502127"></p><h3 id="4-2、TaiShan-200-Pro服务器-2480高端型"><a href="#4-2、TaiShan-200-Pro服务器-2480高端型" class="headerlink" title="4.2、TaiShan 200 Pro服务器 2480高端型"></a>4.2、TaiShan 200 Pro服务器 2480高端型</h3><ul><li>华为2480高端服务器基于鲲鹏920处理器，最高能够提供256核、3.0GHz主频的计算能力和最多25个SSD硬盘。</li><li>2480高端服务器具有领先的数据库性能、创新的RAS特性以及权威的安全可信认证，适合为企业关键业务提供澎湃的高可靠算力。</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011106336.png" alt="image-20240201110623227"></p><h3 id="4-3、TaiShan-100服务器-2280均衡型"><a href="#4-3、TaiShan-100服务器-2280均衡型" class="headerlink" title="4.3、TaiShan 100服务器 2280均衡型"></a>4.3、TaiShan 100服务器 2280均衡型</h3><ul><li>2280均衡型服务器基于鲲鹏916处理器，提供64核、2.4GHz主频的计算能力，具有高性能、低功耗的特点</li><li>2280均衡型实现计算、存储、网络和管理等核心芯片全自研，适合为大数据分析、分布式存储、云等应用场景的工作负载进行高效加速。</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011107700.png" alt="image-20240201110714568"></p><h2 id="5、优劣势"><a href="#5、优劣势" class="headerlink" title="5、优劣势"></a>5、优劣势</h2><h3 id="5-1、生态较为健全"><a href="#5-1、生态较为健全" class="headerlink" title="5.1、生态较为健全"></a>5.1、生态较为健全</h3><blockquote><p> ARM共享优势生态，协同加速发展，构建鲲鹏计算产业生态，下图为生态全景和技术生态</p></blockquote><ol><li>华为鲲鹏和天津飞腾采用 ARM 指令集架构授权，可自行设计 CPU 内核和 SOC，也可扩充指令集，自主化程度相对较高。</li><li>华为鲲鹏 920 处理器是业内首款 7nm 数据中心 ARM 处理器， 非 X86 架构芯片中鲲鹏 920 芯片在算力维度方面优势领先，且发展至今已经达到可以与 X86 芯片相匹配的性能。</li><li>鲲鹏计算产业经过多年发展，已涵盖全栈 IT 基础设施、行业应用及服务。</li></ol><h4 id="生态全景"><a href="#生态全景" class="headerlink" title="生态全景"></a>生态全景</h4><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011124787.png" alt="image-20240201112448655"></p><h4 id="技术生态"><a href="#技术生态" class="headerlink" title="技术生态"></a>技术生态</h4><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011125959.png" alt="image-20240201112513849"></p><h3 id="5-2、实体清单限制"><a href="#5-2、实体清单限制" class="headerlink" title="5.2、实体清单限制"></a>5.2、实体清单限制</h3><ol><li>对于六大信创CPU厂商 ，首先鲲鹏、海光、飞腾、 申威为实体清单企业 ，无法使用美国技 术和产品进行流片；</li><li>六家厂商目前正在销售的主力芯片制程都在16nm及以下（飞腾16nm&#x2F;7nm、 申威16nm、 兆芯16&#x2F;7nm、景嘉微14nm、海光14&#x2F;7nm、龙芯14&#x2F;12nm、鲲鹏7nm） ，因而美国此次新品出口管制新规对信创芯 片实现了全面打击。</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011339257.png" alt="image-20240201133941133"></p>]]></content>
    
    
    
    <tags>
      
      <tag>信创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>飞腾--PK生态主导者</title>
    <link href="/2024/02/11/%E9%A3%9E%E8%85%BE--PK%E7%94%9F%E6%80%81%E4%B8%BB%E5%AF%BC%E8%80%85/"/>
    <url>/2024/02/11/%E9%A3%9E%E8%85%BE--PK%E7%94%9F%E6%80%81%E4%B8%BB%E5%AF%BC%E8%80%85/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这是ren_dong的第<strong>26</strong>篇原创</p></blockquote><h1 id="飞腾–PK生态主导者"><a href="#飞腾–PK生态主导者" class="headerlink" title="飞腾–PK生态主导者"></a>飞腾–PK生态主导者</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><blockquote><p><strong>基于ARM架构的国产CPU</strong></p></blockquote><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011001020.png" alt="image-20240201100148425"></p><ul><li>飞腾信息技术有限公司是国内领先的自主核心芯片提供商 ，是PK生态的主导者。<strong>PK系统</strong>，指的是中国电子所开发的具有完全自主知识产权的中国架构——<strong>飞腾CPU（Phytium）+麒麟操作系统（Kylin）</strong></li><li>飞腾的主要股东包括<strong>中国电子CEC、国防科大、天津市国资委</strong>等，中国长城持有31.5%的股权，是飞腾第一大股东。</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011002909.png" alt="image-20240201100256828"></p><h2 id="2、发展历程"><a href="#2、发展历程" class="headerlink" title="2、发展历程"></a>2、发展历程</h2><ol><li>2014年 ，飞腾公司由中国电子信息产业集团、 天津市滨海新区政府和天津先进技术研究院联合支持成立</li><li>2017年，飞腾推出FT-2000+&#x2F;64高性能服务器CPU</li><li>2020年，飞腾发布新一代高可扩展多路服务器CPU腾云S2500</li><li>2022年，飞腾发布新一代嵌入式CPU飞腾腾珑E2000</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011009968.png" alt="image-20240201100901853"></p><h2 id="3、产品体系"><a href="#3、产品体系" class="headerlink" title="3、产品体系"></a>3、产品体系</h2><ol><li>飞腾CPU产品主要包括<strong>高性能服务器 CPU、高效能桌面CPU和高端嵌入式CPU</strong>三大系列，为从端到云的各型设备提供核心算力支撑</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011115747.png" alt="image-20240201111527317"></p><h2 id="4、产品介绍"><a href="#4、产品介绍" class="headerlink" title="4、产品介绍"></a>4、产品介绍</h2><h3 id="4-1、飞腾腾云®S2500"><a href="#4-1、飞腾腾云®S2500" class="headerlink" title="4.1、飞腾腾云®S2500"></a>4.1、飞腾腾云®S2500</h3><ul><li>飞腾腾云S2500 集成新一代飞腾自主研发的高性能处理器核心FTC663，兼容ARMv8 指令集，支持硬件虚拟化</li><li>飞腾腾云S2500 拥有4 个直连接口，总带宽800Gbps，支持2~8 路直连，Cache 一致性协议从单路64 核心扩展到8 路512 核心</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011019659.png" alt="image-20240201101836016"></p><h3 id="4-2、FT-2000-64"><a href="#4-2、FT-2000-64" class="headerlink" title="4.2、FT-2000+&#x2F;64"></a>4.2、FT-2000+&#x2F;64</h3><ul><li>FT-2000+&#x2F;64芯片集成64个飞腾自主研发的高能效处理器内核FTC662，采用乱序四发射超标量流水线，芯片采用片上并行系统（PSoC）体系结构</li><li>芯片兼容64位ARMV8指令集。 该产品适用于高性能、高吞吐率的服务器领域，如对处理能力和吞吐力要求很高的行业大型业务主机、高性能服务器系统和大型互联网数据中心等。</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011020805.png" alt="image-20240201101922051"></p><h3 id="4-3、FT-1500A-16"><a href="#4-3、FT-1500A-16" class="headerlink" title="4.3、FT-1500A&#x2F;16"></a>4.3、FT-1500A&#x2F;16</h3><ul><li>FT-1500A&#x2F;16芯片集成16个飞腾自主研发的高能效处理器内核FTC660，芯片采用片上并行系统（PSoC）体系结构，兼容64位ARMV8指令集，支持硬件虚拟化。 </li><li>该产品适用于构建较高计算能力和较高吞吐率的服务器产品，如办公业务系统应用&#x2F;事务处理器、数据库服务器、存储服务器、物联网&#x2F;云计算服务器等</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011021728.png" alt="image-20240201102102656"></p><h2 id="5、优劣势"><a href="#5、优劣势" class="headerlink" title="5、优劣势"></a>5、优劣势</h2><h3 id="5-1、致力打造PK生态"><a href="#5-1、致力打造PK生态" class="headerlink" title="5.1、致力打造PK生态"></a>5.1、致力打造PK生态</h3><ol><li>飞腾致力于打造PK生态，飞腾CPU+麒麟OS，已与超过400家企业达成合作。</li><li>依托飞腾全新的硬件级安全机制， 以相关可信技术为支撑， PK 体系融合“S-Security”的立体防护安全链，升级为 <strong>PKS 体系</strong>，并全球首创将“可信计算 3.0”技术融入到 CPU、操作系统和存储控制器中， 实现底层构架的本质安全，并成为国内首个计算机软硬件基础体系标准。</li><li>对比鲲鹏与飞腾的生态构建可以发现， <strong>鲲鹏技术路线比 PKS 路线有较明显的技术和产品优势， PKS 技术路线比鲲鹏技术路线有较明显的安全优势</strong>。</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011022581.png" alt="image-20240201102240465"></p><h3 id="5-2、未来5年总体规划"><a href="#5-2、未来5年总体规划" class="headerlink" title="5.2、未来5年总体规划"></a>5.2、未来5年总体规划</h3><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011023042.png" alt="image-20240201102327941"></p><h3 id="5-3、劣势"><a href="#5-3、劣势" class="headerlink" title="5.3、劣势"></a>5.3、劣势</h3><ol><li>兼容性和生态需要进一步打造</li><li>商用性能需要进一步提升</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>信创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>海光--性能领先实干者</title>
    <link href="/2024/02/10/%E6%B5%B7%E5%85%89-%E6%80%A7%E8%83%BD%E9%A2%86%E5%85%88%E5%AE%9E%E5%B9%B2%E8%80%85/"/>
    <url>/2024/02/10/%E6%B5%B7%E5%85%89-%E6%80%A7%E8%83%BD%E9%A2%86%E5%85%88%E5%AE%9E%E5%B9%B2%E8%80%85/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这是ren_dong的第<strong>24</strong>篇原创</p></blockquote><h1 id="海光–性能领先实干者"><a href="#海光–性能领先实干者" class="headerlink" title="海光–性能领先实干者"></a>海光–性能领先实干者</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><blockquote><p><strong>国产X86 CPU领航者</strong></p></blockquote><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010959922.png" alt="image-20240201084436159"></p><ul><li>海光信息是一家从事高端处理器、加速器等计算芯片产品和系统研发的公司 ，是国产X86 CPU领航者</li><li>海光处理器兼容市场主流的 X86 指令集，具有成熟而丰富的应用生态环境</li><li>公司股权结构合理 ，聚集了中科院体系、地方国资等资源优势</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010849398.png" alt="image-20240201084912295"></p><h2 id="2、发展历程"><a href="#2、发展历程" class="headerlink" title="2、发展历程"></a>2、发展历程</h2><blockquote><p>公司发展经历了四大里程碑</p></blockquote><ol><li>2014年 ，海光有限公司成立</li><li>2016年 ，公司与AMD合资成立海光集成、 海光微电子两家子公司 ，并获得高端处理器的技术授权</li><li>2020年 ，公司变更为股份有限公司 ，中科曙光成为公司第一大股东</li><li>2022年 ，公司于科创板上市</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010847379.png" alt="image-20240201084750289"></p><h2 id="3、产品体系"><a href="#3、产品体系" class="headerlink" title="3、产品体系"></a>3、产品体系</h2><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011119471.png" alt="image-20240201111945361"></p><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011117075.png" alt="image-20240201111741984"></p><ol><li>海光公司已基本形成”<strong>量产一代、研发一代、规划一代</strong>“的产品持续演进节奏。目前，海光处理器的主要性能指标达到了国际先进水平。</li><li>针对不同市场需求，<strong>海光CPU可以划分为7000，5000，3000三大产品系列</strong>。</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011118367.png" alt="image-20240201111816250"></p><h2 id="4、产品介绍"><a href="#4、产品介绍" class="headerlink" title="4、产品介绍"></a>4、产品介绍</h2><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402011118282.png" alt="image-20240201085716909"></p><h3 id="4-1、海光7285"><a href="#4-1、海光7285" class="headerlink" title="4.1、海光7285"></a>4.1、海光7285</h3><ul><li>海光7000系列主要应用于对计算能力、扩展能力、 吞吐量有高要求的领域， 包括云计算、 大数据、数据库、分布式存储、人工 智能等</li><li>海光7285为32核处理器，线程数量为64</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010906909.png" alt="image-20240201090609823"></p><h3 id="4-2、海光5285"><a href="#4-2、海光5285" class="headerlink" title="4.2、海光5285"></a>4.2、海光5285</h3><ul><li>海光5000系列适用云计算、边缘计算、分布式存储 等应用场景， 能够满足互联网、金融、 电信、交通、能源等多行业和企业的运算需求</li><li>海光5285为16核处理器，线程数量为32</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010908464.png" alt="image-20240201090731820"></p><h3 id="4-3、海光3235"><a href="#4-3、海光3235" class="headerlink" title="4.3、海光3235"></a>4.3、海光3235</h3><ul><li>海光3000系列主要应用于入门级服务器、工作站、工 业控制等市场，为中小企业客户和专业 人员提供高效解决方案</li><li>海光3235CPU核心数量为4，线程数量为8</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010909698.png" alt="image-20240201090929604"></p><h2 id="5、劣势"><a href="#5、劣势" class="headerlink" title="5、劣势"></a>5、劣势</h2><h3 id="5-1、美国实体名单制约"><a href="#5-1、美国实体名单制约" class="headerlink" title="5.1、美国实体名单制约"></a>5.1、美国实体名单制约</h3><ol><li>2019年6月美国商务部将中科曙光以及其3家子公司：天津海光、成都海光集成电路、成都海光微电子技术列入实体名单，意味着包括AMD、英特尔等在内的美国公司以及使用美国技术占比**超过25%**的公司均不能与中科曙光及其子公司进行产品和技术的交易。</li><li>2019年6月，<strong>AMD宣布不再向其中国合资公司授权新的 x86 IP 产品</strong>。这意味着AMD在中国与海光成立的合资企业开发的后续产品，将停留在第一代锐龙（Ryzen）和霄龙（EPYC）所依赖的 Zen 架构，而无法继续得到新的Zen 2架构。</li><li>海光流片受到合作方美国公司“格罗方德”限制，目前海光的流片从“格罗方德”切换到了三星。</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010916013.png" alt="image-20240201091623825"></p><h3 id="5-2、自主创新程度低"><a href="#5-2、自主创新程度低" class="headerlink" title="5.2、自主创新程度低"></a>5.2、自主创新程度低</h3><ol><li>海光最新一代 CPU 已接近国际同类高端产品水平，并兼容 x86 指令集，具备较高的应用兼容性和较低的迁移成本，在电信、金融、互联网等领域优势显著</li><li>海光信息采用 x86 架构 <strong>IP 内核授权模式</strong>，可基于公版 CPU 核进行优化或修改，<strong>性能起点高、生态壁垒低</strong>，但是需要支付授权费、<strong>自主创新程度较低</strong>。</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>信创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>信创发展之路</title>
    <link href="/2024/02/09/%E4%BF%A1%E5%88%9B%E5%8F%91%E5%B1%95%E4%B9%8B%E8%B7%AF/"/>
    <url>/2024/02/09/%E4%BF%A1%E5%88%9B%E5%8F%91%E5%B1%95%E4%B9%8B%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="1、什么是信创"><a href="#1、什么是信创" class="headerlink" title="1、什么是信创"></a>1、什么是信创</h2><blockquote><p>信创，即<strong>信息技术应用创新</strong>，以前也被称为“安可“（安全可控）</p></blockquote><h3 id="1-1、基本概念"><a href="#1-1、基本概念" class="headerlink" title="1.1、基本概念"></a>1.1、基本概念</h3><p>信创产业主要包括<strong>四大领域</strong>：</p><ol><li><strong>基础设施</strong>，包括芯片（CPU、GPU等）、存储、服务器、云计算等；</li><li><strong>基础软件</strong>，包括操作系统、数据库、中间件等；</li><li><strong>应用软件</strong>，包括基础办公软件、企业管理软件（ERP、营销管理、人力资源管理、财务管理、合同管理等）、工业软件、流程优化软件等</li><li><strong>信息安全</strong>，包括安全软件、安全硬件、安全服务等。</li></ol><p><img src="https://files.mdnice.com/user/17335/46d4a3c9-2289-40c0-a2f2-8fe2f9f802d0.png"></p><h3 id="1-2、发展背景"><a href="#1-2、发展背景" class="headerlink" title="1.2、发展背景"></a>1.2、发展背景</h3><ol><li><strong>国际威胁</strong>及关键事件警示</li></ol><ul><li>2003 微软黑屏事件</li><li>2013 美国“棱镜门”事件</li><li>2018 中兴、华为事件；实体清单事件</li></ul><ol start="2"><li><strong>国内政策驱动</strong></li></ol><ul><li>2015 颁布《网络安全法》</li><li>2016 “十三五”规划</li><li>2021 “十四五”规划</li></ul><p><img src="https://files.mdnice.com/user/17335/baf6546d-66a4-41d8-baab-4000ce1a19a7.png"></p><h3 id="1-3、发展目标"><a href="#1-3、发展目标" class="headerlink" title="1.3、发展目标"></a>1.3、发展目标</h3><ul><li>信创的核心目的即实现<strong>信息技术产业的完全自主可控</strong></li></ul><p><img src="https://files.mdnice.com/user/17335/31656ff4-cc74-4eff-87f3-5e85634d4913.png"></p><ul><li>自主可控<strong>终端全景架构</strong>图：</li></ul><p><img src="https://files.mdnice.com/user/17335/18030e2f-2d6f-4e93-9478-1922f4786bc3.png"></p><ul><li><strong>云计算全景架构</strong>图：</li></ul><p><img src="https://files.mdnice.com/user/17335/42a5ec8f-ed0a-4bd8-a183-d2d5b690db04.png"></p><h3 id="1-4、发展历程"><a href="#1-4、发展历程" class="headerlink" title="1.4、发展历程"></a>1.4、发展历程</h3><ol><li><strong>第一阶段</strong>：863、核高基时代</li><li><strong>第二阶段</strong>：“棱镜门”事件与去IOE</li><li><strong>第三阶段</strong>：应用试点阶段，飞腾、龙芯、兆芯、海光推出新一代处理器</li><li><strong>第四阶段</strong>：核心关键行业稳步推进技术创新，全面建设自主IT体系</li></ol><p><img src="https://files.mdnice.com/user/17335/154185b5-3c5f-4f9e-9ff6-094257df6fb8.png"></p><h2 id="2、信创产业概况"><a href="#2、信创产业概况" class="headerlink" title="2、信创产业概况"></a>2、信创产业概况</h2><h3 id="2-1、信创体系"><a href="#2-1、信创体系" class="headerlink" title="2.1、信创体系"></a>2.1、信创体系</h3><ol><li>信创体系覆盖<strong>2+8+N</strong>个领域：</li></ol><ul><li><strong>2</strong>：党、政</li><li><strong>8</strong>：金融、电力、电信、石油、交通、教育、医疗、航空航天8个关于国计民生的重要行业</li><li><strong>N</strong>：N个消费市场，如汽车、电子、家居等</li></ul><p><img src="https://files.mdnice.com/user/17335/a0fb55a3-8507-4993-a867-104bc50efb81.png"><br>2. 信创建设节奏：</p><ul><li>2023年已经从“关键环节、非核心业务、部分市场的局部试点”阶段走向“<strong>多环节、核心业务、多行业的全面覆盖</strong>”阶段<br><img src="https://files.mdnice.com/user/17335/c3f6c1a5-0f98-4b05-b018-89d5da573dcb.png"></li></ul><h3 id="2-2、信创产业链图谱"><a href="#2-2、信创产业链图谱" class="headerlink" title="2.2、信创产业链图谱"></a>2.2、信创产业链图谱</h3><p><img src="https://files.mdnice.com/user/17335/3faa4931-3af6-419b-bda5-73191e9e6469.png"></p><h3 id="2-3、-信创市场规模"><a href="#2-3、-信创市场规模" class="headerlink" title="2.3、 信创市场规模"></a>2.3、 信创市场规模</h3><ol><li>2023年信创产业市场规模预计为18710.59亿元，<strong>2025年将接近3.5万亿</strong>，2020年-2025年复合增长率达到 26.99%</li><li>2022年信创市场规模中，<strong>基础设施的市场规模占比54.54%，</strong>应用软件的市场规模占比37.08%，基础软件的市场规模占比6.49%，信息安全的市场规模占比1.89%</li></ol><p><img src="https://files.mdnice.com/user/17335/3646bc46-9dad-4019-9db5-9349108aab27.png"></p><p><img src="https://files.mdnice.com/user/17335/754a340b-a608-4be3-8d39-8ca213c9b178.png"></p><h2 id="3、信创发展趋势"><a href="#3、信创发展趋势" class="headerlink" title="3、信创发展趋势"></a>3、信创发展趋势</h2><h3 id="3-1、适配加速、生态裂变"><a href="#3-1、适配加速、生态裂变" class="headerlink" title="3.1、适配加速、生态裂变"></a>3.1、适配加速、生态裂变</h3><ul><li>厂商加速适配，生态快速裂变，未来3-5年信创产业将迎来爆发式增长：</li></ul><ol><li><strong>党政机关进入全面铺开阶段</strong>，未来3-5年内市场需求将持续放大；</li><li><strong>央国企市场进入加速采购期</strong>：以金融、电信、电力、交通等多行业加速进行国产厂商采购与替换，市场订单爆发式增长；</li><li><strong>采购顺序</strong>：<strong>硬件</strong>（包括基础设施、信息安全硬件）<strong>＞软件</strong>（包括基础软件、应用软件、信息安全软件）<blockquote><p>由于近年来芯片半导体等领域“卡脖子”的因素，硬件产品的替换紧迫性更强</p></blockquote></li></ol><p><img src="https://files.mdnice.com/user/17335/75a6a078-7c30-405f-9e78-b265f5e0bf1a.png"></p><h3 id="3-2、多领域并购整合"><a href="#3-2、多领域并购整合" class="headerlink" title="3.2、多领域并购整合"></a>3.2、多领域并购整合</h3><ul><li>由于相关政策扶持，信创相关细分行业的厂商开始大量出现，<strong>质量参差不齐</strong></li><li>随着未来3~5年市场需求趋于稳定，格局清晰，行业将逐渐进入整合期，<strong>优胜劣汰</strong></li><li>以数据库为例，未来3-5年，行业将会形成<strong>领导者+挑战者</strong>的格局，共同替换海外厂商的市场份额<br><img src="https://files.mdnice.com/user/17335/b94a19a5-4d5b-42e4-bf04-e6820befc41f.png"></li></ul><h3 id="3-3、AI大模型重塑生产力"><a href="#3-3、AI大模型重塑生产力" class="headerlink" title="3.3、AI大模型重塑生产力"></a>3.3、AI大模型重塑生产力</h3><ul><li>2022年11月ChatGPT问世，尤其是<strong>Chat GPT4.0引发国内“百模大战”</strong>，如阿里巴巴的通义大模型，百度的文心大模型、腾讯的混元大模型、华为的盘古大模型等</li><li>通过AI技术进行<strong>安全赋能、提升安全隐患检测能力、漏洞自动化修复</strong>等可以解决传统技术难以解决的安全问题</li><li>未来AI大模型将会广泛应用于<strong>司法机关、能源、金融、先进制造</strong>等行业，也将会为信创产业的发展，打开全新的空间</li></ul><p><img src="https://files.mdnice.com/user/17335/5e29b194-5a32-4103-b80d-ad397b758169.png"></p><h3 id="3-4、政策驱动变为市场驱动"><a href="#3-4、政策驱动变为市场驱动" class="headerlink" title="3.4、政策驱动变为市场驱动"></a>3.4、政策驱动变为市场驱动</h3><ul><li>信创的目的不是替代，而是自主、创新</li><li><strong>过去</strong>，以科研力量为导向促进国产关键技术自研能力的提升</li><li><strong>现阶段</strong>，信创发展驱动力为政策主导，各省政府通过财政补贴，促进供给端快速发展</li><li><strong>未来</strong>，信创产业的发展将以<strong>市场需求+技术赋能为主推动</strong>。</li></ul><p><img src="https://files.mdnice.com/user/17335/b69e8afe-ffec-486e-8ee1-54af6dd99bed.png"></p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><ul><li>码字不易，欢迎<strong>关注、点赞</strong>，感谢支持！</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>信创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>兆芯--合资CPU探路者</title>
    <link href="/2024/02/09/%E5%85%86%E8%8A%AF-%E5%90%88%E8%B5%84CPU%E6%8E%A2%E8%B7%AF%E8%80%85/"/>
    <url>/2024/02/09/%E5%85%86%E8%8A%AF-%E5%90%88%E8%B5%84CPU%E6%8E%A2%E8%B7%AF%E8%80%85/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这是ren_dong的第<strong>27</strong>篇原创</p></blockquote><h1 id="兆芯–合资CPU探路者"><a href="#兆芯–合资CPU探路者" class="headerlink" title="兆芯–合资CPU探路者"></a>兆芯–合资CPU探路者</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010923010.png"></p><ul><li>兆芯是合资CPU的探路者。由台湾威盛电子和上海市国资委的上海联和投资公司合资成立 ，拥有<strong>部分X86技术产权</strong></li><li>兆芯坚持自主创新与兼容主流的发展路线，同时掌握<strong>中央处理器、 图形处理器、芯片组</strong>三大核心技术 ，具备相关IP自主设计研发的能力</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010948550.png" alt="image-20240201094821449"></p><h2 id="2、发展历程"><a href="#2、发展历程" class="headerlink" title="2、发展历程"></a>2、发展历程</h2><ol><li>2013年4月由台湾威盛与隶属于上海市国资委的上海联和投资公司所合资成立 </li><li>2020年10月26日 ，威盛作价2.57亿美元将部分X86技术出售给兆芯 ，兆芯拥有了部分X86技术产权</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010934835.jpeg" alt="公司简介"></p><h2 id="3、产品体系"><a href="#3、产品体系" class="headerlink" title="3、产品体系"></a>3、产品体系</h2><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010937899.png" alt="image-20240201093736799"></p><ol><li>兆芯自主创新研发的通用处理器产品涵盖<strong>“开先”、“开胜”</strong>两大系列，开先用于PC、嵌入式设备，开胜用于服务器设备</li></ol><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010942182.png" alt="image-20240201094237074"></p><h2 id="4、产品介绍"><a href="#4、产品介绍" class="headerlink" title="4、产品介绍"></a>4、产品介绍</h2><h3 id="4-1、KH-40000"><a href="#4-1、KH-40000" class="headerlink" title="4.1、KH-40000"></a>4.1、KH-40000</h3><ul><li>兆芯开胜® KH-40000系列服务器处理器，采用“永丰”自主内核微架构，支持自主互连技术ZPI 3.0，单颗处理器集成最高32核心，具备64MB高速缓存，支持8通道DDR4内存</li><li>开胜® KH-40000系列处理器适用于云计算、大数据分析、视频处理、数据库备份、高性能存储，以及超融合一体机等解决方案的搭建和部署</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010951877.jpeg" alt="开胜® KH-40000系列处理器"></p><h3 id="4-2、KX-7000"><a href="#4-2、KX-7000" class="headerlink" title="4.2、KX-7000"></a>4.2、KX-7000</h3><ul><li>兆芯开先® KX-7000系列处理器采用全新“世纪大道”自主内核微架构和先进的Chiplet互连架构，与上一代产品相比，计算性能提升至2倍</li><li>开先® KX-7000系列处理器支持构建丰富的桌面整机产品，如台式机、笔记本、一体机、云终端以及嵌入式计算平台等</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010952007.jpeg" alt="开先® KX-7000系列处理器"></p><h3 id="4-3、ZX-200-IO扩展芯片"><a href="#4-3、ZX-200-IO扩展芯片" class="headerlink" title="4.3、ZX-200 IO扩展芯片"></a>4.3、ZX-200 IO扩展芯片</h3><ul><li>ZX-200 IO扩展芯片，是兆芯自主创新研发的新一代、高性能IO扩展芯片产品，主要适用于对扩展性要求较高的桌面及服务器等解决方案。</li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010953980.jpeg" alt="ZX-200 IO扩展芯片"></p><h2 id="5、优劣势"><a href="#5、优劣势" class="headerlink" title="5、优劣势"></a>5、优劣势</h2><p>目前公司产品覆盖CPU、芯片组、手机SOC，机顶盒SOC等各个领域。</p><ul><li>优势：兆芯本质是X86芯片，且团队研发经验已有16年时间，因此在性能和应用生态上具有较<br>强优势。</li><li>劣势：兆芯通过股权关系实现了与Intel、AMD的X86专利交叉授权，但目前在产品性能和市场<br>定位上处于相对尴尬的境地；</li><li>兆芯目前在信创领域份额较小，主要在<strong>上海地区具有相对优势</strong></li></ul><p><img src="https://gitee.com/dognren/typora-image/raw/master/Image/202402010955749.png" alt="image-20240201095511643"></p>]]></content>
    
    
    
    <tags>
      
      <tag>信创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CPU相关专业名词</title>
    <link href="/2024/02/08/CPU%E7%9B%B8%E5%85%B3%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D/"/>
    <url>/2024/02/08/CPU%E7%9B%B8%E5%85%B3%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="1、CPU"><a href="#1、CPU" class="headerlink" title="1、CPU"></a>1、CPU</h2><ol><li><strong>中央处理器CPU（Central Processing Unit）是计算机的运算和控制核心</strong>，可以理解为PC及服务器的大脑 </li><li>CPU与内部存储器和输入&#x2F;输出设备合称为电子计算机三大核心部件</li><li>CPU的本质是一块超大规模的集成电路，主要功能是解释计算机指令以及处理计算机软件中的数据<br><img src="https://files.mdnice.com/user/17335/6d2a022d-eb8f-4833-902e-f3658f0c2d84.png" alt="结构及工作原理"></li><li>CPU的内部结构可分为<strong>控制单元，运算单元和存储单元</strong>三大部分。  </li><li>CPU的工作原理：控制单元根据指令，将存储器中的数据发送至运算单元，经运算单元处理后的数据再存储在存储单元中，最后交由应用程序使用</li></ol><h2 id="2、指令集"><a href="#2、指令集" class="headerlink" title="2、指令集"></a>2、指令集</h2><ul><li><strong>指令集是CPU性能体现的重要标志</strong>，CPU要有较好的性能，需要具备功能齐全、通用性强、内含丰富的指令集</li><li>指令集一般被整合在操作系统内核最底层的硬件抽象层中。<strong>指令集属于计算机中硬件与软件的接口</strong>，它向操作系统定义了CPU的基本功能。指令集包括指令格式、寻址方式和数据形式</li></ul><h3 id="2-1、指令集分类"><a href="#2-1、指令集分类" class="headerlink" title="2.1、指令集分类"></a>2.1、指令集分类</h3><p>CPU指令集分为复杂和精简两类</p><ul><li><p><strong>复杂指令集CISC</strong>：<strong>由一条指令完成一个复杂的基本功能</strong>；单条指令集功能强，指令类型丰富完善，编译后指令数量较少，通用场景下性能具有优势。复杂指令集以x86架构为代表，主要用于桌面PC及服务器领域，配套软硬件丰富完善。</p></li><li><p><strong>精简指令集RISC</strong>：由<strong>一条指令完成一个基本动作，多条指令组合完成一个复杂的基本功能</strong>；译码效率高，偏向低功 耗领域优化。精简指令集以ARM架构为代表，主要用于手机、平板等移动终端，软硬件生态逐步建设完善。</p></li></ul><p><img src="https://files.mdnice.com/user/17335/bd641c50-143b-4cf2-b431-f5f17ee9334d.png"></p><h2 id="3、架构"><a href="#3、架构" class="headerlink" title="3、架构"></a>3、架构</h2><ol><li>架构一般指的是某类CPU使用的某一具体指令集，大部分情况下，架构等同于指令集</li><li>当前<strong>主流芯片架构为ARM和X86</strong>，除此之外还有MIPS、POWER、RISC-V等架构。<br><img src="https://files.mdnice.com/user/17335/478b574f-8a97-41fa-86d6-286efd97d368.png"></li></ol><h3 id="3-1、架构对比"><a href="#3-1、架构对比" class="headerlink" title="3.1、架构对比"></a>3.1、架构对比</h3><ol><li><strong>X86架构</strong>起步较早，生态环境完善，占领了服务器、桌面和PC电脑市场绝大部分份额。</li><li><strong>ARM架构</strong>占领了绝大多数移动终端。因为在移动设备行业，X86架构下的复杂指令集会使得移动设备温度过高、耗电过快，难以放入移动设备体积较小的处理器中。</li><li><strong>MIPS架构</strong>由MIPS科技公司开发并授权，广泛被使用在许多电子产品、网络设备、个人装置与商业装置上。  </li><li><strong>POWER架构</strong>：由IBM公司设计开发，具有高度通用、高 性能等特性，支持从嵌入式系统到超级计算机等平台，在汽车、医疗设备、军事、航空航天等领域都有一席之地。</li><li><strong>RISC-V架构</strong>：RISC系列指令集的第五代产品。</li></ol><p><img src="https://files.mdnice.com/user/17335/e8af4202-e55d-4649-83a9-599b032934c4.png"></p><h2 id="4、其他概念"><a href="#4、其他概念" class="headerlink" title="4、其他概念"></a>4、其他概念</h2><p>其他概念如<strong>系统架构、芯片版图</strong>等参考B站视频，感谢大佬们的视频分享！</p><p><img src="https://files.mdnice.com/user/17335/66d25c93-0efe-4f74-8075-09deb7a450ab.png"></p><h2 id="5、指令集到成品CPU"><a href="#5、指令集到成品CPU" class="headerlink" title="5、指令集到成品CPU"></a>5、指令集到成品CPU</h2><ol><li>通过<strong>授权或自研</strong>获取某个指令集架构</li><li>根据指令集手册完成微架构设计，形成设计文档</li><li>通过工程开发形成RTL代码</li><li>用EDA软件进行编译和解析，生成芯片版图，交给中芯国际、台积电等工厂进行流片</li></ol><p><img src="https://files.mdnice.com/user/17335/0804af9b-5be8-4918-8a81-5155cd87318a.png"></p><h2 id="6、信创国产化"><a href="#6、信创国产化" class="headerlink" title="6、信创国产化"></a>6、信创国产化</h2><ol><li>如今CPU行业在全球形成了<strong>Wintel和AA</strong>两大信息化生态体系：<ul><li><strong>Wintel即“Windows+Intel”</strong>，由Windows操作系统与X86指令集组成，其实质是Microsoft与Intel的商业联盟。  </li><li><strong>AA即“Android+ARM”</strong>，由Android操作系统与ARM指令集组成。</li></ul></li><li>CPU行业具备寡头垄断性质，主流指令集和jia go架构均为美国主导，随着中美两国科技博弈加剧，面对美国不断升级的制裁手段，国内持续加速国产替代进程，目前国内主要有<strong>鲲鹏、飞腾、龙芯、兆芯、海光、申威</strong>，六大国产CPU厂商<br><img src="https://files.mdnice.com/user/17335/ecaeed46-2826-4f38-956d-105a6f59deab.png"></li><li>六大厂商发展模式和技术路线也存在差异，后面会有文章进行专门介绍，敬请期待！</li></ol><p><img src="https://files.mdnice.com/user/17335/fec2a7f5-a984-4c53-8e35-cd453142c3db.png"></p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><ul><li>码字不易，欢迎<strong>关注、点赞</strong>，感谢支持！</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>信创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阶段性总结</title>
    <link href="/2024/02/07/%E9%98%B6%E6%AE%B5%E6%80%A7%E6%80%BB%E7%BB%93/"/>
    <url>/2024/02/07/%E9%98%B6%E6%AE%B5%E6%80%A7%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="阶段性总结"><a href="#阶段性总结" class="headerlink" title="阶段性总结"></a>阶段性总结</h1><h2 id="1、发布原创文章10篇"><a href="#1、发布原创文章10篇" class="headerlink" title="1、发布原创文章10篇"></a>1、发布原创文章10篇</h2><ul><li>2024年初立过flag，本年度在要公众号发布原创文章10篇，目前已发表<strong>17</strong>篇，目标达成</li></ul><p><img src="https://files.mdnice.com/user/17335/544e722d-ef26-443b-83f1-4837371c1076.png"></p><ul><li>公众号主要用来分享个人日常服务器运维笔记，目前已发布文章主要分为两个主题：<ul><li><strong>服务器硬件科普系列</strong></li><li><strong>服务器管理平台开发系列</strong></li></ul></li><li>日前公司采购验收了大批信创国产服务器，如鲲鹏arm和海光X86，近期比较忙，后面计划整理发布一些关于<strong>信创服务器相关的科普知识</strong></li><li>目前关于服务器运维方面还是小学生水平，如文章中存在错误或不当之处，<strong>敬请批评指正</strong>！！！</li></ul><h2 id="2、完成一次半马"><a href="#2、完成一次半马" class="headerlink" title="2、完成一次半马"></a>2、完成一次半马</h2><ul><li>2024年初立过flag，本年度需要完成一次半马，目标达成</li></ul><p><img src="https://files.mdnice.com/user/17335/023ab81c-40bd-4fee-a214-140d5c8ba108.png"></p><blockquote><p>郑开马拉松已经开始报名，欢迎参加</p></blockquote><ul><li>友情提示：赛道途径郑开大道，虽然路途平坦，坡度爬升很小，但是前面<strong>27公里几乎没有任何遮荫，起跑时间相对较晚</strong>，如果当天温度较高，很容易跑崩，请注意！！！</li></ul><h2 id="3、Fit超过6000分钟"><a href="#3、Fit超过6000分钟" class="headerlink" title="3、Fit超过6000分钟"></a>3、Fit超过6000分钟</h2><ul><li>Fit健身app用了挺长时间了，个人感觉fit健身课程整体难度会比keep高一些，中间停歇时间也短，会更累！<br><img src="https://files.mdnice.com/user/17335/03792fbb-02a3-42e9-aaf5-d249e0eed3f3.png"></li></ul><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><ul><li>欢迎关注，感谢支持！</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023总结</title>
    <link href="/2024/02/06/2023%E6%80%BB%E7%BB%93/"/>
    <url>/2024/02/06/2023%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h2 id><a href="#" class="headerlink" title></a></h2><p>2023即将结束，过得好快呀，按照惯例写一下自己的年终总结吧。</p><ul><li><p>换工作（深圳→郑州）</p></li><li><p>喜提新车</p></li><li><p>恋爱5周年</p></li><li><p>跑步累计里程突破1000KM</p></li><li><p>读书《明朝那些事儿》、《大明王朝1566》</p></li></ul><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>  从2020年11月在深圳实习，算起来在深圳工作了两年多，今年3月份选择换城市，回到郑州，这里是女友的家乡，双方离父母都更近些。骑驴找马阶段也收获了几个offer，在对象建议下选择了其中一家国企，虽然工资腰斩，岗位也从开发转为运维，但是整体感觉良好，也认识了非常nice的领导和同事，算是不错的跳槽体验。自己也很幸运能够在招聘冻结前成功入职，希望可以干到退休吧。</p><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><p>  其实回到郑州来生活，对于我和对象而言是必然的，只是时间早晚而已，本来计划今年能够订婚，所以3月份我先来郑州探探路，对象后遂而至。离开深圳前转租房子、售卖电动车一切顺利，对象找工作也是有惊无险，也成功入职一家国企，相对稳定一些。说回我自己，来到大郑州之后，马不停蹄的办理了户口转移，成功从深圳人切换到了郑州人。来到郑州之后，感受最深的是郑州道路规划的乱和无序，尽管非机动车道非常之豪华，又宽又长，体验很棒，比起深圳来好了太多，但是各种路边乱停车，4车道”升级”为2车道甚至1车道的骚操作也让我直呼666，惊呆了老铁。自从对象回来之后，我们的生活比较规律，也认识了一些朋友，工作日正常工作，双休日回家或者朋友聚餐，感觉提前过起了退休生活，还不错！</p><h2 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h2><p>  健康是我比较在意的一点，现在体重算是标准和偏重之间左右摇摆，这不是我想要的结果，希望能够克制自己，自律，体重恢复到155斤，步入标准健康体重，拥有腹肌！</p><p>  跑步对于我来说，有必要单起一段，以示尊重。19年为了追求对象，开始大体重跑步减肥，早上操场跑步5公里，晚上宿舍腹部燃脂半小时，刻意减少食量，晚餐不吃，成功减重50斤，从那时候开始喜欢跑步。深圳工作以后，零零星星也跑了几次，但可以忽略不计，回到郑州后，单位独立的健身房重新燃起了我跑步的想法，双11入手强风SE后，迫不及待进行了路跑评测，不得不感慨科技的强大，这双鞋很激进，推进力很强，会不由自主的加速，很喜欢。目前悦跑圈累计跑量突破1000KM，希望2024年能达到累计里程2000KM，一直坚持下去，身体健康，远离疾病！</p><p><img src="https://files.mdnice.com/user/17335/f4d71c0f-73d2-415f-acd8-62568303fc5b.png"></p><h2 id="恋爱"><a href="#恋爱" class="headerlink" title="恋爱"></a>恋爱</h2><p>  现在想来，找到现在的对象，可能是我此生最幸运的事，没有之一！因为对象严格要求减肥，自己才能一直坚持运动，成功减重的同时培养了自己跑步的爱好；因为对象义无反顾随我去深圳，外地工作没有了孤独和无聊，即便是狭小的出租房也充满了温馨和幸福；因为对象的坚决，我卖掉了股票和基金，才没有在理财赔钱的绝路上越走越远，及时止损，落袋为安；因为对象的坚持，我从已有的offer里面选择了国企，虽然工资腰斩，但是拥有了朝九晚五的规律生活；因为对象选了郑州定居，才能双休日到处happy，年纪轻轻就过上了退休的生活。诸如此类，不胜枚举，不得不感慨自己真的是很幸运。</p><p>  本来打算今年买房、订婚一条龙，在郑州安定下来，不过计划总是赶不上变化，7月份喜提新车，也算是步入有车一族，出行回对象家也方便了很多，不用公交、地铁来回换乘才能回到郑州，时间从一下午缩短为半小时，实现了质的飞跃。关于买房，目前郑州楼市并不乐观，大家都在观望，虽然期房宣传推广看起来非常好，但是“烂尾楼”还是让我放弃了期房的想法，在2023之前买到烂尾楼可能是不幸，但是2023之后还买到烂尾楼就是活该。印象中，看房看了好久，中介换了一波又一波，电话也在不停被轰炸，不过目前为止还没有找到自己心仪的房子，双方家长都在催买房，希望自己在2024年上半年能够成功买到属于自己的房子，期待装修属于自己的小家！</p><p><img src="https://files.mdnice.com/user/17335/2b49cd03-04f0-4c29-b237-acf51390a31e.png"></p><h2 id="2024目标"><a href="#2024目标" class="headerlink" title="2024目标"></a>2024目标</h2><ul><li><p>买房、订婚、结婚</p></li><li><p>跑步累计里程2000KM</p></li><li><p>发表原创运维笔记10篇</p></li><li><p>阿里云认证</p></li><li><p>软考认证</p></li><li><p>随缘读书</p></li></ul><p> 2023即将结束，希望大家都能在2024身体健康，一切顺遂！</p>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器重置密码</title>
    <link href="/2024/01/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A6%82%E4%BD%95%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81%EF%BC%9F/"/>
    <url>/2024/01/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A6%82%E4%BD%95%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="服务器重置密码"><a href="#服务器重置密码" class="headerlink" title="服务器重置密码"></a>服务器重置密码</h1><blockquote><p>服务器存在多种操作系统，本篇文章仅以RedHat、银河麒麟、Win Server系统作为举例！</p></blockquote><ul><li>如果想了解更多服务器操作系统相关知识，请参看历史文章《服务器操作系统介绍》</li></ul><h2 id="银河麒麟破解密码"><a href="#银河麒麟破解密码" class="headerlink" title="银河麒麟破解密码"></a>银河麒麟破解密码</h2><blockquote><p>银河麒麟为国产Linux系统，UOS为国产Windows系统</p></blockquote><ol><li>开机进入引导界面，按<code>e</code>，输入用户名<code>root</code>密码<code>Kylin123123</code> ，进入内核编译界面<code>linux /vmlinuz</code>行添加<code>init=/bin/bash console=tty0</code>参数；</li><li>ctrl+x 进入<strong>单用户模式</strong></li><li><code>passwd  root</code>进行重置密码，两次输入确认</li><li><code>init 6</code>命令进行重启，重启后使用重置后密码登录即可</li></ol><p><img src="https://files.mdnice.com/user/17335/d7781d32-66c2-4b48-a49b-03eccf37d7f8.png"></p><h2 id="RedHat破解密码"><a href="#RedHat破解密码" class="headerlink" title="RedHat破解密码"></a>RedHat破解密码</h2><blockquote><p>RedHat破解密码为RHCSA科目必考试题</p></blockquote><p><img src="https://files.mdnice.com/user/17335/b9193cb1-bdeb-454d-9e71-60106b9f5273.png"></p><p><img src="https://files.mdnice.com/user/17335/a6d15230-39d8-4f8f-9f16-c4c5df2d196e.png"></p><p><img src="https://files.mdnice.com/user/17335/566d880c-9305-4d0a-9ffe-0e434c1e5625.png"></p><p><img src="https://files.mdnice.com/user/17335/43302cba-efcd-4119-a1a2-383ee5000b79.png"></p><p><img src="https://files.mdnice.com/user/17335/cf462881-448a-4849-80ec-f862da9a772b.png"></p><p><img src="https://files.mdnice.com/user/17335/f092e035-3913-4691-935b-08164ee17307.png"></p><p>重启完成后可以使用账户及密码进行登录验证</p><h2 id="win系列重置密码"><a href="#win系列重置密码" class="headerlink" title="win系列重置密码"></a>win系列重置密码</h2><blockquote><p>此处以PC端Windows系统重置密码操作举例，Win Server系统类似</p></blockquote><ol><li><p>将U盘插入我们忘记密码的电脑并打开电脑，按下电源键后我们还需要做一件事:狂按Delete进入<a href="https://so.csdn.net/so/search?q=BIOS&spm=1001.2101.3001.7020">BIOS</a>(不同主板按键可能不同,具体可以自行上网查阅)</p></li><li><p>进入BIOS后通过方向键将光标移动至”启动”菜单，选择U盘启动项，点击进入</p></li><li><p>进入PE后，打开桌面上的“Windows密码修改”工具。</p></li></ol><p><img src="https://files.mdnice.com/user/17335/eaa85a78-fd62-4e3d-84ba-071a9ebecdec.png"></p><ol start="4"><li><p>打开C:\WINDOWS\SYSTEM32\CONFIG\SAM 可列出本地全部的账户。</p></li><li><p>选中要修改的账户，点击解锁或更改密码，按照提示完成操作即可。</p></li><li><p>服务区系统win server也可使用PE工具进行密码重置</p></li></ol><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>公众号平台更改了推送规则，如果不想错过内容，请点击  “在看”  和 “赞”，感谢支持！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>日常运维实例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器上架交付</title>
    <link href="/2024/01/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9C%BA%E6%88%BF%E4%B8%8A%E6%9E%B6%E4%BA%A4%E4%BB%98%E6%B5%81%E7%A8%8B/"/>
    <url>/2024/01/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9C%BA%E6%88%BF%E4%B8%8A%E6%9E%B6%E4%BA%A4%E4%BB%98%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="服务器上架交付"><a href="#服务器上架交付" class="headerlink" title="服务器上架交付"></a>服务器上架交付</h1><blockquote><p>服务器到货验收后，会进行机房机房上架，完成重装系统、网络配置后交付使用</p></blockquote><h2 id="1、到货验收"><a href="#1、到货验收" class="headerlink" title="1、到货验收"></a>1、到货验收</h2><ul><li>采购服务器到货后，会联合多部门进行SN、配置、数量等多方面验收，如数量是否匹配，配置是否相符等</li><li>也会拆开机箱看看内部构造，了解下最新的服务器，箱体一般包含服务器、电源线、导轨3部分<br><img src="https://files.mdnice.com/user/17335/ce17ad35-8628-408a-bd7c-9a4a2a541c1a.png"></li></ul><p><img src="https://files.mdnice.com/user/17335/fab9a800-84f0-4954-ac1d-264bb8386433.png"></p><p><img src="https://files.mdnice.com/user/17335/c6a678cd-03b2-4eda-a80b-d239d385cfa1.png"></p><h2 id="2、上架"><a href="#2、上架" class="headerlink" title="2、上架"></a>2、上架</h2><ol><li>参考机柜空闲程度和网络配置等，选定服务器安装具体位置，机柜一般为42U或者47U，现在大多数服务器为2U，服务器之间间隔1U保证有效散热即可，更多服务器基础科普可以参考历史文章《服务器介绍》</li></ol><p><img src="https://files.mdnice.com/user/17335/b0e9523a-dadb-4c04-a81b-3a92c34d9037.png"></p><p><img src="https://files.mdnice.com/user/17335/2992340e-0a8a-4074-b384-39208cc95b90.png"></p><p><img src="https://files.mdnice.com/user/17335/f875b70c-2f45-4d44-94b4-15dbb49101d0.png"></p><ol start="2"><li>安装导轨或者托盘，上架服务器，注意电源为16A还是10A，不要插错，需要接入AB双路电源</li><li>同一机柜需要考虑不能超出机柜的额定功率，否则容易造成安全隐患</li></ol><h2 id="3、配置"><a href="#3、配置" class="headerlink" title="3、配置"></a>3、配置</h2><h3 id="3-1、重装系统"><a href="#3-1、重装系统" class="headerlink" title="3.1、重装系统"></a>3.1、重装系统</h3><p><img src="https://files.mdnice.com/user/17335/2a4b8702-4937-4f23-a37a-72bbdab4099b.png"></p><ul><li><p>服务器加电后，检查状态灯是否正常，配置Raid，一般为Raid5，硬盘介绍可以参考历史文章《服务器硬盘介绍》</p></li><li><p>重装系统，按照要求分配硬盘、进行IP网络配置，验证网关是否ping通，系统介绍可以参考历史文章《服务器操作系统介绍》</p></li></ul><h3 id="3-2、网络配置"><a href="#3-2、网络配置" class="headerlink" title="3.2、网络配置"></a>3.2、网络配置</h3><p><img src="https://files.mdnice.com/user/17335/b1bdc017-5df4-4d10-a509-0aa73ee00052.png"></p><ol><li>一般服务器需要配置带外、业务、管理等多条光纤或者网线，根据网络要求选择服务器光口或电口进行跳线，注意合理配置交换机端口及合理布线.网卡介绍可以参考文章《服务器网卡介绍》<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">ip a # 查看服务器网卡状态<br><br>ethtool -p enoX # 如服务器存在多个网卡UP，需要确认网卡对应网口，合理跳线及配置交换机端口<br><br>vi /etc/sysconfig/network-scripts/ifcfg-enoX # 设置网卡配置文件，修改static静态IP，IPADDR、网关、子网掩码，保存退出<br><br>systemctl restart network # 重启网络使配置生效，也可以ifup、ifdown,注意不同品牌或系统可能命令稍有差异<br><br>ping gateway # ping网关测试验证<br>服务器按照要求可以配置带外IP<br>Del进入SetUp页面<br>修改BMC地址，使用静态IP，注意浪潮需要关闭share Link功能，否则带外及业务配置后网络不通<br></code></pre></td></tr></table></figure></li></ol><h3 id="3-3、烤机"><a href="#3-3、烤机" class="headerlink" title="3.3、烤机"></a>3.3、烤机</h3><ul><li>烤机是一种用于测试服务器硬件稳定性和性能的方法。它涉及让服务器持续运行24小时或更长时间，通过这种方式来检查服务器在高负载下的表现。</li><li>烤机的目的是找出硬件是否存在潜在问题，用来验证其质量是否符合宣传标准</li><li>在烤机过程中，服务器通常会运行一些大型程序或软件，这会导致硬件的温度升高，因此有时被比喻为类似烧烤的过程。</li><li>大型云厂商一般在烤机前会预装统一操作系统，烤机3-7天后，按照客户要求安装重装指定操作系统，作为母机交付使用</li></ul><h2 id="4、交付"><a href="#4、交付" class="headerlink" title="4、交付"></a>4、交付</h2><p><img src="https://files.mdnice.com/user/17335/759ac974-928f-4d46-a37f-7f9119ba5578.png"></p><ul><li>服务器交付使用部门后，运维人员需要记录服务器资产编码、序列号、位置，更新到数据库，做好IP、用途等信息备注</li></ul><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>公众号平台更改了推送规则，如果不想错过内容，请点击  “在看”  和 “赞”，感谢支持！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>日常运维实例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器进入救援模式</title>
    <link href="/2024/01/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E5%85%A5%E6%95%91%E6%8F%B4%E6%A8%A1%E5%BC%8F%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3/"/>
    <url>/2024/01/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E5%85%A5%E6%95%91%E6%8F%B4%E6%A8%A1%E5%BC%8F%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="服务器进入救援模式"><a href="#服务器进入救援模式" class="headerlink" title="服务器进入救援模式"></a>服务器进入救援模式</h1><h2 id="案例1："><a href="#案例1：" class="headerlink" title="案例1："></a>案例1：</h2><blockquote><p>服务器重启之后进入救援模式，<strong>输入root密码后可以正常登录</strong></p></blockquote><p><img src="https://files.mdnice.com/user/17335/cb174679-ea65-4bca-b641-58480784c6f8.png"></p><ol><li><p>使用root密码正常进入，vi &#x2F;etc&#x2F;fstab文件查看启动项</p></li><li><p>一般是mount后删除挂载点文件，导致挂载点找不到文件，进入救援模式，顺序查看文件是否存在</p></li><li><p>对于文件不存在的挂载点，#注释后保存退出（也可以ssh远程登录后对于无效挂载点进行unmount）</p></li><li><p>重启，验证是否正常进入系统</p></li></ol><h2 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h2><blockquote><p>无效挂载点导致权限问题</p></blockquote><p>服务器重启之后进入救援模式，<strong>网卡down状态</strong>，后面板网卡灯不亮；ssh等服务无法通过systemctl restart sshd启动，页面提示：<strong>Authorization not available，Check if polkit service is running or see debug message</strong></p><p><img src="https://files.mdnice.com/user/17335/2ddbc320-1bae-4a74-9d6a-0bfa41848572.png"></p><ol><li>拉起网卡</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Shell">ip  a               # 查看所有网卡状态，发现都处于down的状态，后面板只有1根网线<br><br>ethtool -p  enoX    # 通过该命令确认网线所属网口及对应网卡<br> <br>ifup enoX           # 尝试使用systmctl restart network未生效，所以ifup拉起网卡<br> <br>ip  a               # 检查确认网卡是否正常拉起，ping网关检查<br></code></pre></td></tr></table></figure><ol start="2"><li>尝试恢复sshd服务</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Shell">systemctl restart sshd   # 提示Authorization not available，Check if polkit service is running or see debug message<br><br>journalctl -p err -b     # 查看启动时的错误日志，注意对应最新时间,查看确认为/data目录挂载点failed<br><br>PS:截图为网图，真实环境未拍图，作为参考<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/a2002723-fda0-4673-8256-7711ba491e9f.png"></p><ol start="3"><li>注释无效挂载点，重启恢复</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Shell">vi  /etc/fstab     # vi进入对应启动模式挂载点文件<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">注释/data对应行</span><br><br>reboot<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/3ca0d433-d1ca-4675-9b48-2ee86d2d6712.png"></p><h2 id="案例3"><a href="#案例3" class="headerlink" title="案例3"></a>案例3</h2><blockquote><p>更换硬盘后无法正常进入系统</p></blockquote><p>更换一块故障硬盘后，服务器开机进入救援模式，<strong>无法识别硬盘，无法正常进入系统</strong></p><ol><li>重启进入系统设置界面，尝试对硬盘做Raid</li></ol><ul><li>该服务器两块系统盘做Raid1，互为主备；其余6块硬盘做Raid0，更换其中一块故障硬盘后，重启进入系统设置界面，发现服务器无法正常识别新更换后的硬盘，故无法进行Raid处理</li></ul><ol start="2"><li>重启进入救援模式，查看lsblk情况</li></ol><ul><li><p>救援模式下，使用lsblk -l  发现该服务器硬盘列表为sda-sdf，sda为Raid1系统盘，其他为Raid0数据盘，存在一块未识别硬盘</p></li><li><p>查看对应disk目录，<strong>发现disk0为空</strong>，其余disk1-disk4正常存在数据</p></li><li><p>vi &#x2F;etc&#x2F;fstab 尝试注释disk0相关挂载点，<strong>注意这里挂载点超过30行，无法手动注释</strong>，对fstab文件进行备份后，使用sed命令进行    <strong>sed -i  ‘s&#x2F;/mnt/disk0&#x2F;#/mnt/disk0&#x2F;g’</strong> 注释</p></li><li><p>执行后查看确认已注释，重启</p></li></ul><ol start="3"><li><p>重启后发现仍无法进入系统，发现<strong>服务器启动时disk0存在uuid的挂载</strong>，可能导致disk0依旧会挂载，所以<strong>注释disk0对应的uuid行</strong>，重启</p></li><li><p>重启后恢复服务，确认注释空硬盘目录对应的无效挂载点后可恢复服务</p></li></ol><h2 id="案例4"><a href="#案例4" class="headerlink" title="案例4"></a>案例4</h2><blockquote><p>异常挂载点设置，重启进入救援模式</p></blockquote><ol><li>查看启动错误日志,提示<code>/tmp</code>挂载点异常</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">journalctl -p err -b   <br></code></pre></td></tr></table></figure><ol start="2"><li>查看fstab文件及lsblk逻辑卷挂载点情况</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Shell">vi /etc/fstab<br><br>lsblk<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/e2a26844-f53b-4ea8-8922-fe40e2b9404a.png"></p><p><img src="https://files.mdnice.com/user/17335/63ff0e25-36d9-4c2f-99e8-ab606769c239.png"></p><ol start="3"><li>对比发现<code>/tmp</code>挂载点对应的<code>/dev/mapper/vg00-lv_tmp</code>逻辑卷只有20G，但是该挂载点设置默认大小为30G，大小不匹配导致异常，无法正常启动系统，修改<code>/etc/fstab</code>文件，去除<code>size=30G</code>，保存后重启系统解决<blockquote><p>服务器进入救援模式后，推荐使用案例4方法进行处理，首先通过启动错误日志定位问题，然后针对性进行处理，事半功倍！</p></blockquote></li></ol><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>公众号平台更改了推送规则，如果不想错过内容，请点击  “在看”  和 “赞”，感谢支持！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>日常运维实例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Zabbix High swap space usage</title>
    <link href="/2024/01/13/Zabbix%E4%BA%A4%E6%8D%A2%E5%88%86%E5%8C%BA%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E6%8E%92%E6%9F%A5/"/>
    <url>/2024/01/13/Zabbix%E4%BA%A4%E6%8D%A2%E5%88%86%E5%8C%BA%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E6%8E%92%E6%9F%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="Zabbix-High-swap-space-usage"><a href="#Zabbix-High-swap-space-usage" class="headerlink" title="Zabbix High swap space usage"></a>Zabbix High swap space usage</h1><h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><blockquote><p>Zabbix 出现Highswap space usage(less than 50% free)告警，提示交换分区空间使用率超过50%</p></blockquote><p><img src="https://files.mdnice.com/user/17335/5864687b-e2a1-4534-9db2-159ac05f9816.png"></p><p><img src="https://files.mdnice.com/user/17335/1ea8c9ca-ec89-472f-a55f-e90adc843e23.png"></p><h2 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程"></a>处理过程</h2><h3 id="1-确定swap分区是否已占满"><a href="#1-确定swap分区是否已占满" class="headerlink" title="1. 确定swap分区是否已占满"></a>1. 确定swap分区是否已占满</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">free -h<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/2c5a8e3d-501b-40c4-ae60-30f3fcf68c54.png"></p><p>登录Zabbix服务器检查内存情况，检查发现Linux服务器空闲的内存还有不少，但是使用了大量的Swap空间(超过50%）</p><h3 id="2-统计swap高占用进程"><a href="#2-统计swap高占用进程" class="headerlink" title="2. 统计swap高占用进程"></a>2. 统计swap高占用进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">for file in /proc/*/status; do awk &#x27;/VmSwap|Name/&#123;printf $2 &quot; &quot; $3&#125;END&#123;print &quot;&quot;&#125;&#x27; $file; done | sort -k 2 -n -r | more<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/f45148b6-9774-4a16-8702-85b39c425bbb.png"></p><p><img src="https://files.mdnice.com/user/17335/fd45756c-cf31-4db6-a74d-68ad10e7022d.png"></p><p><img src="https://files.mdnice.com/user/17335/02a18710-7f5b-4433-b065-1fb4de348980.png"></p><p>不断下拉发现<strong>postmaster、zabbix_server</strong>进程数量相对比较多且内存占用量较大，虽然php-fpm有20多个进程，但是内存占用量比较小，gnome等其他进程数量则相对更少</p><h3 id="3-统计高进程内存占用量"><a href="#3-统计高进程内存占用量" class="headerlink" title="3. 统计高进程内存占用量"></a>3. 统计高进程内存占用量</h3><ul><li>统计zabbix_server进程数量</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> /proc/*/status; <span class="hljs-keyword">do</span> awk <span class="hljs-string">&#x27;/VmSwap|Name/&#123;printf $2 &quot; &quot; $3&#125;END&#123;print &quot;&quot;&#125;&#x27;</span> <span class="hljs-variable">$file</span>; <span class="hljs-keyword">done</span> | <span class="hljs-built_in">sort</span> -k 2 -n -r | grep -wi <span class="hljs-string">&quot;zabbix_server&quot;</span> | <span class="hljs-built_in">wc</span> -l<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/fbcc832b-0211-4257-ae53-eef18bcf535b.png"></p><ul><li>统计zabbix_server进程占用内存大小</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">for file in /proc/*/status; do awk &#x27;/VmSwap|Name/&#123;printf $2 &quot; &quot; $3&#125;END&#123;print &quot;&quot;&#125;&#x27; $file; done | sort -k 2 -n -r | grep -wi &quot;zabbix_server&quot; &gt; temp.ini<br><br>sum=0<br><br>for mem in `cat temp.ini | awk -F &#x27; &#x27; &#x27;&#123;print $2&#125;&#x27;`; do sum=$[$sum+$mem]; done<br><br>echo $sum<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/49b6bfd6-ef42-4441-adc5-39eb661538bb.png"></p><p>同理可以计算postmaster等其他进程内存使用量</p><p><img src="https://files.mdnice.com/user/17335/2e1b1a93-a19c-449e-ab02-e3446b75e7a8.png"></p><p>最后统计发现，zabbix_server共有866个进程，占用2.2G的swap内存，接近swap已使用空间的大部分，属于异常情况，需要重启zabbix_server服务</p><h3 id="4-重启zabbix服务"><a href="#4-重启zabbix服务" class="headerlink" title="4. 重启zabbix服务"></a>4. 重启zabbix服务</h3><ul><li><strong>重启服务前建议对虚拟机进行快照，保存当前状态，便于快速回滚</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart zabbix-server<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/4804acdf-84c9-4cb6-85d2-0ee320a37a73.png"></p><p>检查swap交换空间内存发现已经恢复正常</p><blockquote><p>zabbix数据大量写入swap空间明显属于异常，可能是某个bug导致数据并未正常写入磁盘空间，有待进一步定位排查</p></blockquote><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><ul><li>欢迎关注，感谢支持！</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>日常运维实例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小型机故障案例</title>
    <link href="/2024/01/12/%E5%B0%8F%E5%9E%8B%E6%9C%BA%E6%95%85%E9%9A%9C%E6%A1%88%E4%BE%8B/"/>
    <url>/2024/01/12/%E5%B0%8F%E5%9E%8B%E6%9C%BA%E6%95%85%E9%9A%9C%E6%A1%88%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="小型机故障案例"><a href="#小型机故障案例" class="headerlink" title="小型机故障案例"></a>小型机故障案例</h1><p><img src="https://files.mdnice.com/user/17335/b0cafeb8-6461-4c50-af7b-33f15238cdd4.jpg"></p><ul><li>小型机往往应用于金融、电力、电信等行业，Unix操作系统和专用服务器RAS特性、纵向扩展性和高并发访问下的出色处理能力<strong>，如HP RX6600</strong></li><li>本文章记录在机房直连服务器进行故障原因排查及解决过程</li></ul><h2 id="故障现象"><a href="#故障现象" class="headerlink" title="故障现象"></a>故障现象</h2><blockquote><p>HP RX6600小型机关机后，重新开机ping不通，远程无法登陆</p></blockquote><h2 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程"></a>处理过程</h2><ol><li>小型机需要使用<strong>console线接入笔记本电脑，使用SecureCRT工具登录带外即MP</strong>，服务器前面板会说明带外用户名和密码（HP服务器用户名默认为Admin，密码为Admin），如果忘记，可以用笔按住后面板<strong>Reset</strong>小按钮<strong>5S以上</strong>，绿灯变为黄灯后释放</li><li>重新使用默认用户名和密码登陆服务器MP带外，查看电源状态，<strong>注意小型机加电为系统电和服务器电，此故障为系统未正常加电，导致无法进入系统</strong></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs PowerShell"><span class="hljs-comment"># ctrl-B 返回MP主目录  co  console  </span><br><br>cm  <span class="hljs-comment"># Command Menu 命令菜单</span><br><br>pc <span class="hljs-comment"># power control</span><br><br>on <span class="hljs-comment"># power on 服务器上电,回车后输入 y 确认</span><br><br><span class="hljs-built_in">ps</span> <span class="hljs-comment"># power status 查看电源状态</span><br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/183a1e64-7c4f-4240-a7c6-96c5cefa3e7b.png"></p><ol start="3"><li>查看发现服务器电源状态处于<strong>not available</strong>状态，尝试带外方式使机器上电power on，但是未生效，随后检查服务器后面板电源模块发现其中1个电源模块故障，<strong>拔除双电源线，然后重新插入正常电源线，对服务器带外正常加电</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Shell">cm # console<br><br>pc # power control<br><br>ps # power status 重新登录MP后发现服务器已正常加电<br><br>ss # system status 查看系统进程状态<br><br>pc # power control<br><br>on # 再次确认电源状态，提示already on,已正常加电<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/32ac4778-15d6-4ca4-8e7b-3bda5f5c2312.png"></p><p><img src="https://files.mdnice.com/user/17335/e34fd9cd-92f8-489f-aa5c-f94464705977.png"></p><ol start="4"><li>服务器正常上电后，进入MP主菜单，进入虚拟前面板查看已正常进入系统引导，<strong>等待10分钟左右即可尝试登录系统</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Shell">ctrl-B # 回到主菜单<br><br>vfp # virtual Front Panel，查看是否正常进入引导<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&quot;Virtual Front Panel&quot;</span>（虚拟前面板）通常指的是一种软件界面或工具，用于模拟硬件设备的前面板或控制面板。这种模拟可以用于监控、控制和与实际设备进行交互，而无需实际物理连接。虚拟前面板通常用于测试、仿真、远程控制或培训等应用</span><br><br>ctrl-B # 回到主菜单<br><br>co # 再次确认已经正常进入引导<br></code></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/17335/b04e85f2-de1e-4cf8-9a7d-dc60d2fffcbf.png"></p><p><img src="https://files.mdnice.com/user/17335/4f7bcea3-c9ac-46ce-814e-04e6c13bf914.png"></p><p><img src="https://files.mdnice.com/user/17335/a6b63ada-5d80-40f2-982a-0c0286f78bfc.png"></p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><ul><li>欢迎关注，感谢支持！</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>日常运维实例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器硬盘介绍</title>
    <link href="/2023/12/16/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%A1%AC%E7%9B%98%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/12/16/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%A1%AC%E7%9B%98%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="服务器硬盘"><a href="#服务器硬盘" class="headerlink" title="服务器硬盘"></a>服务器硬盘</h1><h2 id="1、基本概念"><a href="#1、基本概念" class="headerlink" title="1、基本概念"></a>1、基本概念</h2><p>服务器硬盘是一种专门用于存储和读取数据的硬件设备。它通常具有较大的存储容量和高速的数据传输速度，以满足服务器对大量数据的处理需求。服务器硬盘可以根据不同的特性和用途进行分类。以下是几种常见的服务器硬盘分类：</p><ol><li><p><strong>SATA硬盘</strong>：SATA（Serial ATA）硬盘是最常见的<strong>机械硬盘HDD</strong>。它们通常具有较低的成本和较大的存储容量，适用于需要大容量存储但对性能要求不高的应用场景。</p></li><li><p><strong>SAS硬盘</strong>：SAS（Serial Attached SCSI）硬盘是一种高性能的<strong>机械硬盘HDD</strong>。它们具有更高的转速和更快的数据传输速度，适用于需要较高性能和可靠性的应用场景，如数据库、虚拟化和企业级应用。</p></li><li><p><strong>SSD硬盘</strong>：SSD（Solid State Drive）硬盘是一种基于<strong>闪存存储技术</strong>的服务器硬盘。它们具有更快的读写速度、更低的延迟和较高的耐用性，适用于需要高性能和快速响应的应用场景，如虚拟化、云计算和大数据分析。</p></li><li><p><strong>NVMe硬盘</strong>：NVMe（Non-Volatile Memory Express）硬盘是一种基于<strong>PCIe接口</strong>的高性能存储设备。它们具有更高的带宽和更低的延迟，适用于需要极高性能和低延迟的应用场景，如高性能计算、人工智能和大规模数据库。</p></li><li><p>Nearline硬盘：Nearline硬盘是一种介于传统硬盘和磁带之间的存储介质。它们具有较大的存储容量和较低的成本，适用于需要长期存储和备份的应用场景。</p></li><li><p>光纤通道硬盘：光纤通道硬盘是一种使用光纤通道技术连接的高性能存储设备。它们具有更高的带宽和更低的延迟，适用于需要高性能和可靠性的大规模存储系统。</p></li></ol><p><img src="https://files.mdnice.com/user/17335/f0d97d94-e6b8-4247-9987-d4b485d62096.png"></p><h3 id="1-1、硬盘尺寸"><a href="#1-1、硬盘尺寸" class="headerlink" title="1.1、硬盘尺寸"></a>1.1、硬盘尺寸</h3><p><img src="https://files.mdnice.com/user/17335/188096fe-06c0-405f-a551-ac1cefd79632.png"></p><h3 id="1-2、硬盘关键指标"><a href="#1-2、硬盘关键指标" class="headerlink" title="1.2、硬盘关键指标"></a>1.2、硬盘关键指标</h3><ul><li>硬盘<strong>10k</strong>和<strong>15k</strong>是指硬盘的转速，分别为每分钟10000转和15000转</li></ul><p><img src="https://files.mdnice.com/user/17335/cc12a52f-3680-4312-8950-70c703ef75de.png"></p><h3 id="1-3、容量差异对比"><a href="#1-3、容量差异对比" class="headerlink" title="1.3、容量差异对比"></a>1.3、容量差异对比</h3><p><img src="https://files.mdnice.com/user/17335/b8648a59-e328-4c55-9fc5-896f2fe3e4e4.png"></p><h3 id="1-4、功耗差异对比"><a href="#1-4、功耗差异对比" class="headerlink" title="1.4、功耗差异对比"></a>1.4、功耗差异对比</h3><p><img src="https://files.mdnice.com/user/17335/4b550667-0f99-4212-b0af-baee119eb081.png"></p><h3 id="1-5、性能差异对比"><a href="#1-5、性能差异对比" class="headerlink" title="1.5、性能差异对比"></a>1.5、性能差异对比</h3><p><img src="https://files.mdnice.com/user/17335/a3672e3b-d69e-41d6-bf9f-cb7f1f11a85c.png"></p><h3 id="1-6、寿命及可靠性分析"><a href="#1-6、寿命及可靠性分析" class="headerlink" title="1.6、寿命及可靠性分析"></a>1.6、寿命及可靠性分析</h3><p><img src="https://files.mdnice.com/user/17335/8e044e84-2b23-45c5-a03e-9a7dd48767cd.png"></p><h2 id="2、选型指南"><a href="#2、选型指南" class="headerlink" title="2、选型指南"></a>2、选型指南</h2><h3 id="2-1、业务类型"><a href="#2-1、业务类型" class="headerlink" title="2.1、业务类型"></a>2.1、业务类型</h3><p><img src="https://files.mdnice.com/user/17335/33e9b9b8-553d-4645-99ab-f6687b624bda.png"></p><p><img src="https://files.mdnice.com/user/17335/fde59083-624a-474a-a104-4f9e5c8e3a2d.png"></p><h3 id="2-2、主流硬盘类型"><a href="#2-2、主流硬盘类型" class="headerlink" title="2.2、主流硬盘类型"></a>2.2、主流硬盘类型</h3><p><img src="https://files.mdnice.com/user/17335/ead86f2a-3994-46e9-967a-3c71ff0a00cd.png"></p><h3 id="2-3、硬盘关键指标"><a href="#2-3、硬盘关键指标" class="headerlink" title="2.3、硬盘关键指标"></a>2.3、硬盘关键指标</h3><p><img src="https://files.mdnice.com/user/17335/8df213f4-adce-4501-9d9d-fb89bc1b3cd3.png"></p><h2 id="3、RAID"><a href="#3、RAID" class="headerlink" title="3、RAID"></a>3、RAID</h2><p>RAID（Redundant Array of Independent Disks）是一种通过<strong>将多个独立的硬盘组合在一起来提供数据冗余、性能提升或两者兼备</strong>的技术。服务器RAID是在服务器中使用RAID技术来提供更高的数据可靠性、性能和存储容量。</p><h3 id="3-1、RAID级别"><a href="#3-1、RAID级别" class="headerlink" title="3.1、RAID级别"></a>3.1、RAID级别</h3><p>以下是几种常见的服务器RAID级别：</p><ol start="7"><li><p><strong>RAID 0</strong>：RAID 0将数据分散存储在多个硬盘上，以提高读写性能。它通过并行读写操作来提高数据吞吐量，但没有冗余备份，因此如果其中一个硬盘故障，所有数据都会丢失。</p></li><li><p><strong>RAID 1</strong>：RAID 1<strong>使用两个硬盘来实现数据镜像。所有数据同时写入两个硬盘，因此如果其中一个硬盘故障，数据仍然可从另一个硬盘中恢复</strong>。RAID 1提供了较高的数据可靠性，但存储容量只能达到一个硬盘的容量。</p></li><li><p><strong>RAID 5</strong>：RAID 5<strong>使用三个或更多硬盘来实现数据分布和冗余</strong>。它将数据和奇偶校验信息分散存储在多个硬盘上，以提供冗余备份和读写性能的提升。<strong>如果其中一个硬盘故障，数据可以通过奇偶校验信息从其他硬盘中重建</strong>。RAID 5提供了较高的数据可靠性和存储容量。</p></li><li><p><strong>RAID 6</strong>：RAID 6与RAID 5类似，但使用两个奇偶校验信息来提供更高的冗余备份。它<strong>需要至少四个硬盘，并且可以同时容忍两个硬盘的故障</strong>。RAID 6提供了更高的数据可靠性，但写入性能相对较低。</p></li><li><p><strong>RAID 10</strong>：<strong>RAID 10是RAID 1和RAID 0的组合</strong>。它将<strong>多个硬盘分为两组，每组中的硬盘进行数据镜像，然后将数据分散存储在两组之间</strong>以提高性能。RAID 10提供了较高的数据可靠性和读写性能，但存储容量只能达到总容量的一半。</p></li></ol><p><img src="https://files.mdnice.com/user/17335/0ccf28a4-507f-442f-ad7a-bf2353c75981.png"></p><h3 id="3-2、数据存取方式"><a href="#3-2、数据存取方式" class="headerlink" title="3.2、数据存取方式"></a>3.2、数据存取方式</h3><p><img src="https://files.mdnice.com/user/17335/18fcf80a-54bd-41d9-ba3e-2e7b9fad66e6.png"></p><h3 id="3-3、热备-重构"><a href="#3-3、热备-重构" class="headerlink" title="3.3、热备 &amp; 重构"></a>3.3、热备 &amp; 重构</h3><p><img src="https://files.mdnice.com/user/17335/4a135217-ff4e-4210-b750-5124f55670be.png"></p><h3 id="3-4、逻辑卷"><a href="#3-4、逻辑卷" class="headerlink" title="3.4、逻辑卷"></a>3.4、逻辑卷</h3><p><img src="https://files.mdnice.com/user/17335/057a247c-2b7a-4e11-9557-4c0960748e2f.png"></p><h3 id="3-5、RAID卡"><a href="#3-5、RAID卡" class="headerlink" title="3.5、RAID卡"></a>3.5、RAID卡</h3><p><img src="https://files.mdnice.com/user/17335/a2206f54-3bc4-486b-9231-57afad6f9125.png"></p><p><img src="https://files.mdnice.com/user/17335/991e8dd7-fea9-466f-b9f4-0cfedb15f774.png"></p><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>欢迎大家关注我，公众号会分享个人日常运维记录，欢迎点赞和在看！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器硬件科普</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器带外管理</title>
    <link href="/2023/12/14/%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%A6%E5%A4%96%E7%AE%A1%E7%90%86/"/>
    <url>/2023/12/14/%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%A6%E5%A4%96%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="带外管理"><a href="#带外管理" class="headerlink" title="带外管理"></a>带外管理</h1><blockquote><p>服务器带外管理（Out-of-Band Management）是指在服务器正常运行时，通过专门的管理通道对服务器进行监控、配置和控制，而无需依赖服务器的主操作系统</p></blockquote><ul><li><p>管理通道是独立于服务器主处理器和操作系统的，通常是通过专门的硬件或固件实现的。</p></li><li><p>带外管理的一个主要目的是提供对服务器的远程访问和控制，即使服务器的主操作系统处于关机、崩溃或其他异常状态。</p></li><li><p>通过带外管理，管理员可以<strong>远程执行诸如电源控制、系统重启、BIOS设置修改、操作系统安装和故障排除等任务，而无需物理接触服务器</strong>。</p></li></ul><p><img src="https://files.mdnice.com/user/17335/94d8fb2d-e148-4762-b951-afcbbab14cfa.png"></p><h2 id="1、BMC"><a href="#1、BMC" class="headerlink" title="1、BMC"></a>1、BMC</h2><p>BMC: Baseboard Management Controller</p><ul><li><p>板级管理控制器；</p></li><li><p>服务器带外管理的核心部件；</p></li><li><p>使用 IPMI 协议对外提供访问接口；</p></li></ul><p><img src="https://files.mdnice.com/user/17335/1a682ee2-f006-43a0-97c7-33251e48b031.png"></p><h3 id="1-1、BMC特点"><a href="#1-1、BMC特点" class="headerlink" title="1.1、BMC特点"></a>1.1、BMC特点</h3><ul><li><p>BMC自有硬件接口（LAN&#x2F;Serial）和软件（Firmware&#x2F;Linux）；</p></li><li><p>遵循 IPMI 协议，对外提供统一的访问接口；</p></li><li><p>作为服务器特有模块，提供温度，电压，风扇，总线监控；提供管理接口，便于进行远程管理服务器;</p></li><li><p>BMC使用独立的Power，在系统关机时依然处于工作状态</p></li></ul><h3 id="1-2、BMC基本功能"><a href="#1-2、BMC基本功能" class="headerlink" title="1.2、BMC基本功能"></a>1.2、BMC基本功能</h3><ul><li><p>电源控制：状态、开启&#x2F;关闭&#x2F;循环电源、重启、NMI（不可屏蔽中断）；</p></li><li><p>监控：传感器数值；</p></li><li><p>库存：可更换部件 (FRU)；</p></li><li><p>日志：系统事件日志；</p></li><li><p>恢复：BMC对接收到的事件采取措施；</p></li><li><p>警报：SNMP陷阱格式通过局域网传输；</p></li><li><p>串行控制台重定向：通过串行&#x2F;调制解调器连接进行分页。</p></li></ul><h2 id="2、BIOS"><a href="#2、BIOS" class="headerlink" title="2、BIOS"></a>2、BIOS</h2><p><strong>Basic Input Output System</strong></p><ul><li><p>硬件与软件程序间的“转换器”；</p></li><li><p>对硬件提供最底层的支持；</p></li></ul><p><img src="https://files.mdnice.com/user/17335/c7f3f598-8a30-475d-b3e9-c53f8ffeac34.png"></p><h3 id="2-1、CMOS"><a href="#2-1、CMOS" class="headerlink" title="2.1、CMOS"></a>2.1、<strong>CMOS</strong></h3><p><strong>Complementary Metal Oxide Semiconductor</strong></p><ul><li><p>互补金属氧化物半导体，一块存储器；</p></li><li><p>用来存储BIOS的设置等信息，系统加电启动时读取CMOS信息；</p></li><li><p>主板无供电情况下，有纽扣电池供电，用户BIOS设置不丢失；</p></li></ul><p><strong>Clear CMOS：【放电】</strong></p><ul><li><p>跳线短接</p></li><li><p>纽扣电池</p></li></ul><p><img src="https://files.mdnice.com/user/17335/7c040f36-ce5a-4ad3-b651-e3e9a73eff18.png"></p><h3 id="2-2、基础功能"><a href="#2-2、基础功能" class="headerlink" title="2.2、基础功能"></a>2.2、<strong>基础功能</strong></h3><h4 id="2-2-1、Enter-Setup"><a href="#2-2-1、Enter-Setup" class="headerlink" title="2.2.1、Enter Setup"></a>2.2.1、<strong>Enter Setup</strong></h4><p>服务器开机进到POST界面，会显示Enter Setup，按下相关按键进到BIOS.</p><p><img src="https://files.mdnice.com/user/17335/187c2862-bf22-4c17-9b87-c907515e9b48.png"></p><hr><h4 id="2-2-2、Main"><a href="#2-2-2、Main" class="headerlink" title="2.2.2、Main"></a>2.2.2、<strong>Main</strong></h4><p>该页面主要显示BIOS、内存、处理器等关键信息，包含但不限于：固件版本、发布日期、访问级别、容量、缓存等信息.</p><p><img src="https://files.mdnice.com/user/17335/574d8332-1ff9-4413-9e85-45d2729a5dc3.png"></p><hr><h4 id="2-2-3、Advance"><a href="#2-2-3、Advance" class="headerlink" title="2.2.3、Advance"></a>2.2.3、<strong>Advance</strong></h4><p>该页面主要显示高级选项设定，依据需求对系统进行设定、调优、信息查看等.</p><p><img src="https://files.mdnice.com/user/17335/2460609f-9f9f-4485-bc26-374ec4562aae.png"></p><hr><h4 id="2-2-4、Platform-Configuration"><a href="#2-2-4、Platform-Configuration" class="headerlink" title="2.2.4、Platform Configuration"></a>2.2.4、<strong>Platform Configuration</strong></h4><p>该页面主要显示PCH、内存等系统下设置项与拓扑信息显示.</p><p><img src="https://files.mdnice.com/user/17335/f475c267-e277-4220-9c8c-ec26191a543c.png"></p><hr><h4 id="2-2-5、Socket-Configuration"><a href="#2-2-5、Socket-Configuration" class="headerlink" title="2.2.5、Socket Configuration"></a>2.2.5、<strong>Socket</strong> Configuration</h4><p>该页面主要显示CPU系统下设置项、调优项与拓扑信息等的显示.</p><p><img src="https://files.mdnice.com/user/17335/a6b7671c-9816-4c90-a642-a3c11c88fc2e.png"></p><hr><h4 id="2-2-6、Server-Mgmt"><a href="#2-2-6、Server-Mgmt" class="headerlink" title="2.2.6、Server Mgmt"></a>2.2.6、<strong>Server Mgmt</strong></h4><p>设备<strong>IPMI远程管理功能设置与信息显示页面.</strong></p><p><img src="https://files.mdnice.com/user/17335/7de34a14-4511-4d66-9ce1-d6654cdf90e7.png"></p><hr><h4 id="2-2-7、Security"><a href="#2-2-7、Security" class="headerlink" title="2.2.7、Security"></a>2.2.7、<strong>Security</strong></h4><p>系统管理员密码设置以及TPM功能管理页面.</p><p><img src="https://files.mdnice.com/user/17335/e0d6b0f5-c63e-48ec-8f7c-231b89e612a3.png"></p><hr><h4 id="2-2-8、Boot"><a href="#2-2-8、Boot" class="headerlink" title="2.2.8、Boot"></a>2.2.8、<strong>Boot</strong></h4><p>引导项信息显示，以及设置页面.</p><p><img src="https://files.mdnice.com/user/17335/0b28b08b-0b36-4014-ab42-e5ecadb69a45.png"></p><h2 id="3、IPMI"><a href="#3、IPMI" class="headerlink" title="3、IPMI"></a>3、IPMI</h2><ol><li><p>IPMI协议是由惠普、戴尔、英特尔制定研发出来，最新标准为IPMI2.0，用户可以用IPMI来监视服务器物理健康特征，比如温度、电压、风扇、电源状态等等</p></li><li><p>IPMI智能平台管理接口的核心就是BMC基板管理控制器，<strong>IPMI所有功能都通过向BMC发送命令来实现</strong></p></li><li><p><strong>BMC、BIOS、OS相互独立，并可进行交互，通过BMC可以远程操作服务器</strong>，包括开关机、重装系统、查看硬件状态和日志等等，一般个人PC不具备BMC功能</p></li></ol><p><img src="https://files.mdnice.com/user/17335/3129f386-46c2-41f3-ab4a-5ff57753380a.png"></p><h3 id="3-1、带外分类"><a href="#3-1、带外分类" class="headerlink" title="3.1、带外分类"></a>3.1、带外分类</h3><ol start="4"><li><p>不同厂商对带外管理接口名称定义不同，可以统称为<strong>MGMT</strong>，一般是先配置BMC地址，然后通过个人PC进行远程连接</p></li><li><p>配置BMC的<strong>IP地址、子网掩码、网关可以通过BIOS进行配置</strong>，注意IMM、IBMC等关键词进行配置即可；也可以通过BMC地址进行远程修改配置</p></li><li><p>配置完成后，服务器会重启，重启界面可以看到带外IP地址，一般通过网线直连服务器带外管理口，DHCP分配BMC的IP地址，然后将<strong>笔记本电脑IP设置为同网段地址，浏览器输入BMC的IP地址即可进行带外界面访问</strong></p></li></ol><p><img src="https://files.mdnice.com/user/17335/216fd5b1-608d-4c77-be83-c10971a80b78.png"></p><p><img src="https://files.mdnice.com/user/17335/819fe3eb-c51e-4f04-8fdd-04cf61f8d08b.png"></p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>公众号平台更改了推送规则，如果不想错过内容，请点击  “在看”  和 “赞”，感谢支持！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器硬件科普</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器内存介绍</title>
    <link href="/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E5%AD%98%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E5%AD%98%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本篇文章用于介绍服务器内存，包括基本概念、内存演进、规格识别、内存条配置规则等</p></blockquote><h2 id="1、基本概念"><a href="#1、基本概念" class="headerlink" title="1、基本概念"></a>1、基本概念</h2><p>服务器内存是指安装在服务器主板上的用于存储和处理数据的硬件组件。它是服务器中的主要性能关键因素之一，对于服务器的运行速度、多任务处理能力和数据处理效率起着至关重要的作用。以下是一些关于服务器内存的重要概念和特点：</p><ul><li><p>容量：服务器内存的容量决定了服务器可以同时存储和处理的数据量。较大的内存容量可以支持更多的应用程序和用户同时访问服务器，提供更高的性能和响应速度。</p></li><li><p>类型：服务器内存通常使用ECC（Error-Correcting Code）内存，它具有纠错功能，可以检测和修复内存中的错误。常见的服务器内存类型包括DDR4、DDR3等。</p></li><li><p>速度：服务器内存的速度指的是内存模块的数据传输速率。较高的内存速度可以提供更快的数据读写和处理能力，从而提高服务器的性能。</p></li><li><p>扩展性：服务器内存通常具有较高的扩展性，可以通过添加更多的内存模块来扩大内存容量。这对于满足不断增长的业务需求和提高服务器性能非常重要。</p></li><li><p>通道和插槽：服务器内存通常分为多个通道和插槽，以支持多通道内存架构。多通道内存可以提供更高的数据传输带宽，提高服务器的性能。</p></li><li><p>冗余和热插拔：一些服务器支持冗余内存配置，即在一个内存模块故障时，其他内存模块可以继续工作，确保服务器的稳定性和可靠性。此外，一些服务器还支持热插拔内存，即可以在服务器运行时添加或移除内存模块，而无需关闭服务器</p></li></ul><p><img src="https://files.mdnice.com/user/17335/939d2631-d531-42c8-b0e1-07b91df42b5a.png"></p><h3 id="1-1、存储功能分类"><a href="#1-1、存储功能分类" class="headerlink" title="1.1、存储功能分类"></a>1.1、存储功能分类</h3><p><img src="https://files.mdnice.com/user/17335/00cedc4a-b6a1-48a9-9002-6e12675369b1.png"></p><h3 id="1-2、DRAM分类"><a href="#1-2、DRAM分类" class="headerlink" title="1.2、DRAM分类"></a>1.2、DRAM分类</h3><p><img src="https://files.mdnice.com/user/17335/09dda3bf-2240-462f-a077-0e8b602f902e.png"></p><h3 id="1-3、DRAM在系统中位置"><a href="#1-3、DRAM在系统中位置" class="headerlink" title="1.3、DRAM在系统中位置"></a>1.3、DRAM在系统中位置</h3><ul><li><p>早期内存通过存储器总线和北桥（MCH）相连，北桥通过前段总线与CPU通信</p></li><li><p>从Intel Nehalem起，北桥被集成到CPU内部，内存直接通过存储器总线与CPU相连</p></li></ul><p><img src="https://files.mdnice.com/user/17335/d86fa7c4-4252-4da2-bffe-0e6eebd2f016.png"></p><h2 id="2、内存演进"><a href="#2、内存演进" class="headerlink" title="2、内存演进"></a>2、内存演进</h2><p><img src="https://files.mdnice.com/user/17335/9b364bac-61b2-4f79-9bfc-dc2313a95958.png"></p><h3 id="2-1、内存演进的指标：容量、功耗、性能"><a href="#2-1、内存演进的指标：容量、功耗、性能" class="headerlink" title="2.1、内存演进的指标：容量、功耗、性能"></a>2.1、内存演进的指标：容量、功耗、性能</h3><p><img src="https://files.mdnice.com/user/17335/56126915-6294-4952-904d-fa36e9a92435.png"></p><h3 id="2-2、内存条类型介绍"><a href="#2-2、内存条类型介绍" class="headerlink" title="2.2、内存条类型介绍"></a>2.2、内存条类型介绍</h3><p><img src="https://files.mdnice.com/user/17335/53ef00d9-b63f-448e-ac34-ec75737a9fb1.png"></p><h3 id="2-3、主流内存条生产厂家"><a href="#2-3、主流内存条生产厂家" class="headerlink" title="2.3、主流内存条生产厂家"></a>2.3、主流内存条生产厂家</h3><p><img src="https://files.mdnice.com/user/17335/4f3f2d67-91bd-41f6-81e8-ba80156dc912.png"></p><h2 id="3、常用功能"><a href="#3、常用功能" class="headerlink" title="3、常用功能"></a>3、常用功能</h2><h3 id="3-1、内存插槽类型"><a href="#3-1、内存插槽类型" class="headerlink" title="3.1、内存插槽类型"></a>3.1、内存插槽类型</h3><p><img src="https://files.mdnice.com/user/17335/2dac040b-e57a-438d-9206-428b1fb5cd2c.png"></p><h3 id="3-2、内存条组成"><a href="#3-2、内存条组成" class="headerlink" title="3.2、内存条组成"></a>3.2、内存条组成</h3><p><img src="https://files.mdnice.com/user/17335/41c69653-df33-4c65-bd74-63f14f678f86.png"></p><h3 id="3-3、内存条规格识别"><a href="#3-3、内存条规格识别" class="headerlink" title="3.3、内存条规格识别"></a>3.3、内存条规格识别</h3><p><img src="https://files.mdnice.com/user/17335/5b2b7081-ea81-474b-85bf-0686999209e5.png"></p><h3 id="3-4、服务器内存条配置原则"><a href="#3-4、服务器内存条配置原则" class="headerlink" title="3.4、服务器内存条配置原则"></a>3.4、服务器内存条配置原则</h3><p><img src="https://files.mdnice.com/user/17335/489e4970-2c41-437b-ad10-1aced3601c4d.png"></p><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><ul><li>公众号平台更改了推送规则，如果不想错过内容，记得读完点一下“在看”，加个“星标”，这样每次新文章推送才会第一时间出现在你的订阅列表里。</li><li>点“在看”支持我吧!</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器硬件科普</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器CPU介绍</title>
    <link href="/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8CPU%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8CPU%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本篇文章主要介绍服务器CPU，包括基础概念、常用功能及国产CPU简介等</p></blockquote><h2 id="1、基本概念"><a href="#1、基本概念" class="headerlink" title="1、基本概念"></a>1、基本概念</h2><ul><li><p>CPU（Central Processing Unit，中央处理器）是一块超大规模的集成电路，通常被称为计算机的大脑，是一台计算机的运算核心（Core）和控制核心（Control Unit）,也是整个计算机系统最重要的组成部件</p></li><li><p>中央处理器主要包括运算器（算数逻辑运算单元，ALU，Arithmetic Logic Unit）和高速缓冲器（Cache）及实现他们之间联系的数据（Data）、控制及状态的总线（Bus）</p></li><li><p><strong>CPU与存储器（Memory）和输入&#x2F;输出（I&#x2F;O</strong>）设备合称为电子计算机三大核心部件</p></li></ul><p><img src="https://files.mdnice.com/user/17335/5fc60f1b-c631-4cbd-b62b-a778dc2f3e4c.png"></p><h3 id="CPU分类"><a href="#CPU分类" class="headerlink" title="CPU分类"></a>CPU分类</h3><p>CPU目前有两种指令集，即CISC复杂指令集和RISC精简指令集，一般按照指令集对CPU进行分类</p><ul><li><p>CISC（Complex Instruction Set Computer），复杂指令集，早期的CPU全都是CISC架构，设计目的主要是用最少的机器语言指令来完成所需的计算任务，这种架构会增加CPU结构的复杂性和对CPU工艺的要求，但对于编译器开发十分有利</p></li><li><p>RISC（Reduced Instruction Set Computer），精简指令集。RISC架构要求软件来指定各个操作步骤，这种架构可以降低CPU的复杂性以及允许在同样的工艺水平下生产出功能更强大的CPU，但对于编译器的设计有更高的要求</p></li></ul><p><img src="https://files.mdnice.com/user/17335/94047b35-ba3e-4af8-a87d-aefb3a8cf23e.png"></p><h2 id="2、X86处理器"><a href="#2、X86处理器" class="headerlink" title="2、X86处理器"></a>2、X86处理器</h2><h3 id="2-1、发展历史"><a href="#2-1、发展历史" class="headerlink" title="2.1、发展历史"></a>2.1、发展历史</h3><p><img src="https://files.mdnice.com/user/17335/dc33a12a-71e9-4f38-9f90-ab7376a9aac9.png"></p><h3 id="2-2、Intel-CPU路标"><a href="#2-2、Intel-CPU路标" class="headerlink" title="2.2、Intel CPU路标"></a>2.2、Intel CPU路标</h3><p><img src="https://files.mdnice.com/user/17335/7f731931-95fe-4e7a-aa2d-99a3d9cd51f0.png"></p><h3 id="2-3、Intel命名规则"><a href="#2-3、Intel命名规则" class="headerlink" title="2.3、Intel命名规则"></a>2.3、Intel命名规则</h3><p><img src="https://files.mdnice.com/user/17335/cb6d834a-7fe5-43c0-8108-eddd736992b5.png"></p><h2 id="3、常用功能"><a href="#3、常用功能" class="headerlink" title="3、常用功能"></a>3、常用功能</h2><h3 id="3-1、缓存"><a href="#3-1、缓存" class="headerlink" title="3.1、缓存"></a>3.1、缓存</h3><ul><li>缓存（Cache Memory）是位于CPU和内存之间的临时存储器，目前的CPU拥有一级、二级和三级缓存（L1 L2 L3 Cache）</li></ul><p><img src="https://files.mdnice.com/user/17335/eb087875-8f03-4f82-ab7c-1aa9e30f29ef.png"></p><h3 id="3-2、频率"><a href="#3-2、频率" class="headerlink" title="3.2、频率"></a>3.2、频率</h3><ul><li><p>CPU 的频率主要包括主频、外频和倍频三部分。<strong>主频&#x3D;外频*倍频</strong>，这是X86架构CPU计算频率的公式，CPU主频为CPU 的额定工作频率，当内核数目和缓存大小一样时，主频越高的CPU性能越好</p></li><li><p><strong>Intel Turbo Boost</strong>技术为Intel睿频加速技术，此技术运行Intel CPU在标称频率（TSC）之上，性能分配上实现按需分配</p></li></ul><p><img src="https://files.mdnice.com/user/17335/d38b3fe5-8f0e-47d0-9211-16a20294e0ce.png"></p><h3 id="3-3、多核和超线程"><a href="#3-3、多核和超线程" class="headerlink" title="3.3、多核和超线程"></a>3.3、多核和超线程</h3><ul><li><p><strong>多核处理器</strong>把多个CPU（核心）集成到单个集成电路芯片中</p></li><li><p><strong>超线程（Hyper-Threading）</strong>其实就是同时多线程（simultaneous multi-theading），是一项允许一个CPU执行多个控制流的技术</p></li></ul><p><img src="https://files.mdnice.com/user/17335/2f97991b-c63b-4bfc-a0b0-798b4cf87eb1.png"></p><h3 id="3-4、CPU参数说明"><a href="#3-4、CPU参数说明" class="headerlink" title="3.4、CPU参数说明"></a>3.4、CPU参数说明</h3><p><img src="https://files.mdnice.com/user/17335/47b9c98a-da41-41a9-bc36-80e4597af00b.png"></p><h2 id="4、国产CPU"><a href="#4、国产CPU" class="headerlink" title="4、国产CPU"></a>4、国产CPU</h2><p>目前都在主推信创，即信息技术应用创新产业，旨在实现信息技术领域的自主可控，保障国家信息安全，主打的是国产化替代。国产 CPU 和操作系统是信创产业的根基，也是信创产业中技术壁垒最高的环节。 没有CPU 和操作系统的安全可控，整个信创产业就是无根之木、无源之水</p><p><img src="https://files.mdnice.com/user/17335/ecaeed46-2826-4f38-956d-105a6f59deab.png"></p><p><img src="https://files.mdnice.com/user/17335/264b60b4-40d0-4ce7-80c0-47e980e362cf.png"></p><h2 id="4-1、举例"><a href="#4-1、举例" class="headerlink" title="4.1、举例"></a>4.1、举例</h2><p>前不久接触过一个银河麒麟的国产操作系统，用着不是那么好用，简单放一个桌面截图吧</p><p><img src="https://files.mdnice.com/user/17335/d9f4d3fd-a7a8-4b30-91bf-806a7819c3ca.png"></p><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>欢迎大家关注我，公众号会分享个人日常运维记录，欢迎点赞和在看！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器硬件科普</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器管理平台（1）- 概述</title>
    <link href="/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%881%EF%BC%89/"/>
    <url>/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%881%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="什么是SRE"><a href="#什么是SRE" class="headerlink" title="什么是SRE?"></a>什么是SRE?</h2><blockquote><p>SRE即Site Reliability Engineering（网站可靠性工程），是一种源于Google的工作理念和方法。它旨在确保产品和服务的高可用性和可靠性。</p></blockquote><p><img src="https://files.mdnice.com/user/17335/c1ff8726-7b7e-46fc-8c3b-74a387376a9f.png"></p><ul><li><p>SRE团队的成员通常是拥有软件开发背景的工程师，他们不仅设计和实施自动化工具和流程，还参与构建、部署和运行大规模复杂系统。SRE需要同时具备运维能力和开发能力</p></li><li><p>运维方面：之前文章已经介绍过服务器基础 、CPU、内存、硬盘等相关的硬件知识，感兴趣可以去看下历史文章，其他运维实例将在后续文章发布</p></li><li><p>开发方面：本人之前在某某云厂商用Go开发过数据平台，用于对批量云计算服务器进行全流程信息统计；因此计划更新简化版服务器管理平台开发实战教程，本篇文章会先对该平台进行整体介绍</p></li></ul><h1 id="1、背景需求"><a href="#1、背景需求" class="headerlink" title="1、背景需求"></a>1、背景需求</h1><ul><li>针对机房服务器采集操作系统等相关数据，如CPU、内存、PCI设备、登录日志、机器位置等信息，解决故障服务器定位难、服务器信息监控不完善等痛点</li><li>实现定时采集、自主上报、落地存储、报表展示、界面可视化curd的全链路流程一体化，构建自动化运维告警监控工具，即服务器数据管理平台</li></ul><p><img src="https://files.mdnice.com/user/17335/bd5dd2e6-23fb-4f89-a6b2-d4607f4f82c3.png"></p><h1 id="2、整体架构"><a href="#2、整体架构" class="headerlink" title="2、整体架构"></a>2、整体架构</h1><h2 id="2-1、架构图"><a href="#2-1、架构图" class="headerlink" title="2.1、架构图"></a>2.1、架构图</h2><p><img src="https://files.mdnice.com/user/17335/032fa5b7-7112-4978-b0d0-48c86c822b75.png"></p><h3 id="2-2、设计思路"><a href="#2-2、设计思路" class="headerlink" title="2.2、设计思路"></a>2.2、设计思路</h3><ol><li><p><strong>定时上报：</strong>Shell脚本比Agent更加轻量化，无侵入式实现定时采集、自主上报，对业务几乎无影响，用户侧无感知</p></li><li><p><strong>稳定后端</strong>：Go-web后端借鉴Gin框架，后台服务更稳定、更轻量</p></li><li><p><strong>落地存储</strong>：MySQL单库多表进行永久化数据存储</p></li><li><p><strong>报表展示</strong>：Grafana定制化模版多样数据展示</p></li><li><p><strong>可视化curd：</strong>layUI框架搭建前端系统，界面可视化增删改查操作</p></li><li><p><strong>钉钉告警：</strong>SQL配置告警规则，定时轮询进行钉钉告警</p></li><li><p><strong>文件存储</strong>：HTTPD文件服务器稳定上传下载</p></li></ol><h2 id="2-3、选型指南"><a href="#2-3、选型指南" class="headerlink" title="2.3、选型指南"></a>2.3、选型指南</h2><h3 id="Gin框架"><a href="#Gin框架" class="headerlink" title="Gin框架"></a><a href="https://gin-gonic.com/">Gin框架</a></h3><ul><li><p>Go开源轻量级Web框架、简单易用</p></li><li><p>官方文档齐全、社区活跃</p></li><li><p>支持中间件、路由分组</p></li><li><p>支持JSON验证、错误分级管理</p></li></ul><p><img src="https://files.mdnice.com/user/17335/7442dbf3-95d0-4ff6-bc57-6e723f9a62d7.png"></p><h3 id="LayUI"><a href="#LayUI" class="headerlink" title="LayUI"></a><a href="https://layui.itze.cn/">LayUI</a></h3><ul><li><p>开源模块化前端UI框架、拿来即用</p></li><li><p>遵循原生态的 HTML&#x2F;CSS&#x2F;JavaScript 开发模式</p></li><li><p>只需面向浏览器本身、无需涉足各类构建工具</p></li><li><p>文档齐全、示例众多</p></li></ul><p><img src="https://files.mdnice.com/user/17335/73fe051b-0ec6-482e-992e-dcd48fc76b67.png"></p><h3 id="Postman调试工具"><a href="#Postman调试工具" class="headerlink" title="Postman调试工具"></a><a href="https://www.postman.com/">Postman调试工具</a></h3><ul><li><p>自动化API接口调试工具</p></li><li><p>模拟HTTP Request如GET、POST 、DELETE等请求</p></li><li><p>模拟发送文件(图片、TXT等) 等特定接口测试</p></li></ul><p><img src="https://files.mdnice.com/user/17335/57355918-c034-4ea3-9744-0b4810b72d25.png"></p><h1 id="3、环境准备"><a href="#3、环境准备" class="headerlink" title="3、环境准备"></a>3、环境准备</h1><h2 id="3-1、环境参数"><a href="#3-1、环境参数" class="headerlink" title="3.1、环境参数"></a>3.1、环境参数</h2><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Centos7.9<br>MySQL8.0.20<br>go1.19.3<br>Gin<br>Grafana8.3.3<br>httpd<br>LayUI2.8.11<br>GoLand2022.2<br></code></pre></td></tr></table></figure><h2 id="3-2、安装教程"><a href="#3-2、安装教程" class="headerlink" title="3.2、安装教程"></a>3.2、安装教程</h2><h3 id="HTTPD文件服务器"><a href="#HTTPD文件服务器" class="headerlink" title="HTTPD文件服务器"></a>HTTPD文件服务器</h3><p><a href="https://blog.csdn.net/stalin_/article/details/90200173">https://blog.csdn.net/stalin_&#x2F;article&#x2F;details&#x2F;90200173</a></p><h3 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h3><p><a href="https://blog.csdn.net/super_xyo/article/details/128210788">https://blog.csdn.net/super_xyo&#x2F;article&#x2F;details&#x2F;128210788</a></p><h3 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h3><p><a href="https://blog.51cto.com/u_15735145/5546596">https://blog.51cto.com/u_15735145/5546596</a></p><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><p><a href="https://blog.csdn.net/qq_36539042/article/details/125385002">https://blog.csdn.net/qq_36539042&#x2F;article&#x2F;details&#x2F;125385002</a></p><h3 id="LayUI-1"><a href="#LayUI-1" class="headerlink" title="LayUI"></a>LayUI</h3><p><a href="https://layui.dev/">https://layui.dev/</a></p><h3 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h3><p><a href="https://blog.csdn.net/Shyllin/article/details/123690458">https://blog.csdn.net/Shyllin/article/details/123690458</a></p><h1 id="4、成品简介"><a href="#4、成品简介" class="headerlink" title="4、成品简介"></a>4、成品简介</h1><h2 id="Grafana-1"><a href="#Grafana-1" class="headerlink" title="Grafana"></a>Grafana</h2><p><img src="https://files.mdnice.com/user/17335/97fe1552-ed3b-4910-aca5-1dfc22793f85.png"></p><h2 id="LayUI-2"><a href="#LayUI-2" class="headerlink" title="LayUI"></a>LayUI</h2><p><img src="https://files.mdnice.com/user/17335/a5180f6c-a589-4bb2-b54f-63c6cd163280.png"></p><p><img src="https://files.mdnice.com/user/17335/97aa2788-0526-402f-87f6-16523cd2d985.png"></p><h2 id="钉钉"><a href="#钉钉" class="headerlink" title="钉钉"></a>钉钉</h2><p><img src="https://files.mdnice.com/user/17335/e0c85da8-e16e-4436-ae43-a996312eed46.png"></p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>公众号平台更改了推送规则，如果不想错过内容，请点击  “在看”  和 “赞”，感谢支持！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器管理平台</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器管理平台（2）- 数据库表设计</title>
    <link href="/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%882%EF%BC%89/"/>
    <url>/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%882%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库表设计"><a href="#数据库表设计" class="headerlink" title="数据库表设计"></a>数据库表设计</h1><blockquote><p>本篇文章主要对数据管理平台数据库表设计进行介绍，包括单库多表设计、SQL语句、视图构造等</p></blockquote><h2 id="1、整体设计"><a href="#1、整体设计" class="headerlink" title="1、整体设计"></a>1、整体设计</h2><ul><li><p>设备品牌、序列号、型号等使用业务主表进行记录，逻辑磁盘、PCI设备可能出现1对N的情况，分别使用PCI设备表、Mac地址表、逻辑磁盘表、应用程序表、登录日志表进行记录</p></li><li><p>构建虚拟视图统一查询，多表联合，使用业务IP+SN序列号作为设备唯一标识</p></li><li><p>增加历史记录表，对所有表数据的更新删除操作进行记录，方便回溯</p></li></ul><p><img src="https://files.mdnice.com/user/17335/e0222c2d-2e89-4b64-b141-d6caf5f03208.png"></p><h2 id="2、库表设计"><a href="#2、库表设计" class="headerlink" title="2、库表设计"></a>2、库表设计</h2><blockquote><p>涉及数据库表较多，此处仅展示部分表结构设计</p></blockquote><h3 id="2-1、业务主表"><a href="#2-1、业务主表" class="headerlink" title="2.1、业务主表"></a>2.1、业务主表</h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>字段名称</td><td>字段类型</td><td>解释</td></tr><tr><td>Id</td><td>字段类型</td><td>解释</td></tr><tr><td>BusinessIp</td><td>int</td><td>业务Ip地址</td></tr><tr><td>SN</td><td>string</td><td>序列号</td></tr><tr><td>Brand</td><td>string</td><td>品牌</td></tr><tr><td>Model</td><td>string</td><td>型号</td></tr><tr><td>CPU</td><td>timestamp</td><td>CPU</td></tr><tr><td>Memory</td><td>timestamp</td><td>内存</td></tr><tr><td>PlatformType</td><td>string</td><td>平台类型</td></tr><tr><td>UseFor</td><td>string</td><td>用途</td></tr><tr><td>CreatedAt</td><td>timestamp</td><td>创建时间</td></tr><tr><td>UpdatedAt</td><td>timestamp</td><td>修改时间</td></tr></tbody></table><h3 id="2-2、PCI设备表"><a href="#2-2、PCI设备表" class="headerlink" title="2.2、PCI设备表"></a>2.2、PCI设备表</h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>字段名称</td><td>字段类型</td><td>解释</td></tr><tr><td>Id</td><td>int</td><td>自增ID</td></tr><tr><td>BusinessIp</td><td>string</td><td>业务Ip地址</td></tr><tr><td>SN</td><td>string</td><td>序列号</td></tr><tr><td>PCIDevice</td><td>string</td><td>PCI设备表</td></tr><tr><td>CreatedAt</td><td>timestamp</td><td>创建时间</td></tr><tr><td>UpdatedAt</td><td>timestamp</td><td>修改时间</td></tr></tbody></table><h3 id="2-3、MAC地址表"><a href="#2-3、MAC地址表" class="headerlink" title="2.3、MAC地址表"></a>2.3、MAC地址表</h3><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>字段名称</td><td>字段类型</td><td>解释</td></tr><tr><td>Id</td><td>int</td><td>自增ID</td></tr><tr><td>BusinessIp</td><td>string</td><td>业务Ip地址</td></tr><tr><td>SN</td><td>string</td><td>序列号</td></tr><tr><td>MacAddress</td><td>string</td><td>MAC地址</td></tr><tr><td>CreatedAt</td><td>timestamp</td><td>创建时间</td></tr><tr><td>UpdatedAt</td><td>timestamp</td><td>修改时间</td></tr></tbody></table><h2 id="3、SQL设计"><a href="#3、SQL设计" class="headerlink" title="3、SQL设计"></a>3、SQL设计</h2><blockquote><p>涉及数据库表较多，此处仅展示部分建表SQL，作为参考</p></blockquote><h3 id="3-1、历史记录表"><a href="#3-1、历史记录表" class="headerlink" title="3.1、历史记录表"></a>3.1、历史记录表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `es_history` (<br>    `Id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;自增ID&#x27;</span>,<br>    `Object` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;索引&#x27;</span>,<br>    `PK` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;BOM前缀&#x27;</span>,<br>    `Key` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;索引&#x27;</span>,<br>    `OpKind` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;BOM前缀&#x27;</span>,<br>    `PrevModify` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;索引&#x27;</span>,<br>    `NextModify` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;BOM前缀&#x27;</span>,<br>    `Version` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;索引&#x27;</span>,<br>    `Operator` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;BOM前缀&#x27;</span>,<br>    `CreatedAt` <span class="hljs-type">timestamp</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    `UpdatedAt` <span class="hljs-type">timestamp</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>    <span class="hljs-keyword">PRIMARY</span> KEY (`Id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb4 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8mb4_0900_ai_ci<br></code></pre></td></tr></table></figure><h3 id="3-2、系统信息表"><a href="#3-2、系统信息表" class="headerlink" title="3.2、系统信息表"></a>3.2、系统信息表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `es_meta_info` (<br>    `Id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;自增ID&#x27;</span>,<br>    `BusinessIp` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;业务IP&#x27;</span>,<br>    `SN` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;序列号&#x27;</span>,<br>    `Brand` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;品牌&#x27;</span>,<br>    `Model` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;型号&#x27;</span>,<br>    `CpuModel` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;CPU型号&#x27;</span>,<br>    `CpuNumber` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;CPU数量&#x27;</span>,<br>    `Memory` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;内存&#x27;</span>,<br>    `PlatformType` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;平台类型&#x27;</span>,<br>    `UseFor` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;用途&#x27;</span>,<br>    `MacAddress` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;MAC地址&#x27;</span>,<br>    `LogicDisk` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;逻辑磁盘&#x27;</span>,<br>    `PCIDevices` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;PCI设备&#x27;</span>,<br>    `Program` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;应用程序&#x27;</span>,<br>    `LoginInfo` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;登录日志&#x27;</span>,<br>    `CreatedAt` <span class="hljs-type">timestamp</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    `UpdatedAt` <span class="hljs-type">timestamp</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>    <span class="hljs-keyword">PRIMARY</span> KEY (`Id`),<br>    <span class="hljs-keyword">UNIQUE</span> KEY `business` (`BusinessIp`,`SN`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb4 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8mb4_0900_ai_ci<br></code></pre></td></tr></table></figure><h3 id="3-3、逻辑磁盘表"><a href="#3-3、逻辑磁盘表" class="headerlink" title="3.3、逻辑磁盘表"></a>3.3、逻辑磁盘表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `es_logicaldisk` (<br>    `Id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;自增ID&#x27;</span>,<br>    `BusinessIp` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;业务IP&#x27;</span>,<br>    `SN` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;序列号&#x27;</span>,<br>    `Filesystem` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;系统盘&#x27;</span>,<br>    `Size` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;大小&#x27;</span>,<br>    `Used` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;已使用&#x27;</span>,<br>    `Avail` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;可使用&#x27;</span>,<br>    `UsePercent` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;使用百分比&#x27;</span>,<br>    `Mounted` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;挂载点&#x27;</span>,<br>    `CreatedAt` <span class="hljs-type">timestamp</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    `UpdatedAt` <span class="hljs-type">timestamp</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>    <span class="hljs-keyword">PRIMARY</span> KEY (`Id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb4 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8mb4_0900_ai_ci<br></code></pre></td></tr></table></figure><h3 id="3-4、视图表"><a href="#3-4、视图表" class="headerlink" title="3.4、视图表"></a>3.4、视图表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span> es_meatinfoview <span class="hljs-keyword">AS</span> <span class="hljs-keyword">SELECT</span><br>    es_meta_info.BusinessIp,<br>    es_meta_info.SN,<br>    es_meta_info.Brand,<br>    es_meta_info.Model,<br>    es_meta_info.CPUModel,<br>    es_meta_info.CPUNumber,<br>    es_meta_info.Memory,<br>    es_meta_info.PlatformType,<br>    es_meta_info.UseFor,<br>    CONCAT_WS(<span class="hljs-string">&#x27;---&#x27;</span>,es_logicaldisk.Filesystem, es_logicaldisk.Size, es_logicaldisk.UsePercent, es_logicaldisk.Mounted) <span class="hljs-keyword">as</span> FileSystem,<br>    es_macaddress.MacAddress,<br>    es_pcidevice.PCIDevice,<br>    es_product.Program,<br>    es_product.PORT,<br>    es_meta_info.CreatedAt<br>    <span class="hljs-keyword">FROM</span><br>    es_meta_info<br>    <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> es_logicaldisk <span class="hljs-keyword">ON</span> es_logicaldisk.BusinessIp <span class="hljs-operator">=</span> es_meta_info.BusinessIp<br>    <span class="hljs-keyword">AND</span> es_logicaldisk.SN <span class="hljs-operator">=</span> es_meta_info.SN<br>    <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> es_macaddress <span class="hljs-keyword">ON</span> es_macaddress.BusinessIp <span class="hljs-operator">=</span> es_meta_info.BusinessIp<br>    <span class="hljs-keyword">AND</span> es_macaddress.SN <span class="hljs-operator">=</span> es_meta_info.SN<br>    <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> es_pcidevice <span class="hljs-keyword">ON</span> es_pcidevice.BusinessIp <span class="hljs-operator">=</span> es_meta_info.BusinessIp<br>    <span class="hljs-keyword">AND</span> es_pcidevice.SN <span class="hljs-operator">=</span> es_meta_info.SN<br>    <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> es_product <span class="hljs-keyword">ON</span> es_product.BusinessIp <span class="hljs-operator">=</span> es_meta_info.BusinessIp<br>    <span class="hljs-keyword">AND</span> es_product.SN <span class="hljs-operator">=</span> es_meta_info.SN<br>    <span class="hljs-keyword">WHERE</span><br>    es_logicaldisk.Filesystem <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;%tmpfs%&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="4、数据展示"><a href="#4、数据展示" class="headerlink" title="4、数据展示"></a>4、数据展示</h2><blockquote><p>涉及数据库表较多，此处仅展示部分表数据，作为参考，数据IP为之前腾讯云测试公网IP，现已弃用，请勿访问！</p></blockquote><h3 id="4-1、PCI设备信息"><a href="#4-1、PCI设备信息" class="headerlink" title="4.1、PCI设备信息"></a>4.1、PCI设备信息</h3><p><img src="https://files.mdnice.com/user/17335/bf1170f4-b442-49c6-a598-37b6d68756a7.png"></p><h3 id="4-2、逻辑磁盘信息"><a href="#4-2、逻辑磁盘信息" class="headerlink" title="4.2、逻辑磁盘信息"></a>4.2、逻辑磁盘信息</h3><p><img src="https://files.mdnice.com/user/17335/405c7c37-eabc-4a20-acc4-ecc472fa8f41.png"></p><h3 id="4-3、历史记录信息"><a href="#4-3、历史记录信息" class="headerlink" title="4.3、历史记录信息"></a>4.3、历史记录信息</h3><p><img src="https://files.mdnice.com/user/17335/47d67db9-e72b-45bc-9a55-1cf60000908c.png"></p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>公众号平台更改了推送规则，如果不想错过内容，请点击  “在看”  和 “赞”，感谢支持！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器管理平台</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器管理平台（3）- Web服务端</title>
    <link href="/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%883%EF%BC%89/"/>
    <url>/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%883%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="Web服务端"><a href="#Web服务端" class="headerlink" title="Web服务端"></a>Web服务端</h1><blockquote><p>整体架构采用前后端分离形式，后端使用Golang实现，参考Gin框架</p></blockquote><h2 id="1、后端服务"><a href="#1、后端服务" class="headerlink" title="1、后端服务"></a>1、后端服务</h2><h3 id="1-1、服务端架构"><a href="#1-1、服务端架构" class="headerlink" title="1.1、服务端架构"></a>1.1、服务端架构</h3><p><img src="https://files.mdnice.com/user/17335/45615db1-bf6d-449b-8c09-b6c5a168b563.png"></p><ul><li>代码可参考Github开源项目：<a href="https://github.com/pbrong/hrms">https://github.com/pbrong/hrms</a></li></ul><p><img src="https://files.mdnice.com/user/17335/aee7ec54-2ad3-4175-8460-dd0428fea35a.png"></p><h3 id="1-2、服务地址"><a href="#1-2、服务地址" class="headerlink" title="1.2、服务地址"></a>1.2、服务地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://x.x.x.x:8000/api/v1/meta/info<br>http://x.x.x.x:8000/api/v1/logicDisk<br>http://x.x.x.x:8000/api/v1/pciDevice<br>http://x.x.x.x:8000/api/v1/macAddress<br>http://x.x.x.x:8000/api/v1/product<br>http:// x.x.x.x:8000/api/v1/loginInfo<br></code></pre></td></tr></table></figure><ul><li><p>后端接口使用Token鉴权，shell脚本、web访问使用不同Token名称</p></li><li><p>为防止数据误删，Shell脚本、Web访问调用Delete接口，默认返回调用成功，但并不做删除操作，如需删除可由管理员操作（删除前需做备份，按照clone日期命名）</p></li></ul><h2 id="2、代码架构"><a href="#2、代码架构" class="headerlink" title="2、代码架构"></a>2、代码架构</h2><p><img src="https://files.mdnice.com/user/17335/e30e5922-7500-46a0-91b2-8b14b6d2a4c5.png"></p><h3 id="2-1、API目录"><a href="#2-1、API目录" class="headerlink" title="2.1、API目录"></a>2.1、API目录</h3><blockquote><p>该目录功能为启动Http服务，暴露服务地址，并对各接口实现get、post、put、delete等功能</p></blockquote><p><img src="https://files.mdnice.com/user/17335/d23b7a38-4d78-4b1e-bd33-375f3e403981.png"></p><h3 id="2-2、config目录"><a href="#2-2、config目录" class="headerlink" title="2.2、config目录"></a>2.2、config目录</h3><blockquote><p>该目录功能为web后端服务配置，包括数据库地址、端口、密码、后端服务接口等信息</p></blockquote><p><img src="https://files.mdnice.com/user/17335/f8946940-69aa-4b12-b550-dcd7024c7c95.png"></p><h3 id="2-3、model目录"><a href="#2-3、model目录" class="headerlink" title="2.3、model目录"></a>2.3、model目录</h3><blockquote><p>该目录为实体层，功能为数据库结构解析，记录MySQL数据库表</p></blockquote><p><img src="https://files.mdnice.com/user/17335/6b0e782c-d660-4e66-8d0f-aac5d0be5b69.png"></p><h3 id="2-4、其他目录"><a href="#2-4、其他目录" class="headerlink" title="2.4、其他目录"></a>2.4、其他目录</h3><p><img src="https://files.mdnice.com/user/17335/6287f9f5-8d28-41f8-9830-c7cdf66f2836.png"></p><ul><li>notify目录对接钉钉，实现告警检测及告警通知功能</li><li>service为中间服务层</li><li>shell目录则对应相关脚本，如CPU、内存等相关信息采集脚本、告警信息模版等</li><li>ssh目录为ansible和expect进行批量服务器ssh登录，实现批量命令执行等</li><li>util为工具包目录，提供时间戳转换、结构体差异对比等必要功能</li><li>README.md 项目说明</li><li>go.mod 为go依赖列表文件</li><li>go.sum 为 go依赖校验文件</li><li>sql 为所用到的sql文件</li></ul><h2 id="3、接口功能测试"><a href="#3、接口功能测试" class="headerlink" title="3、接口功能测试"></a>3、接口功能测试</h2><ol><li>按照sql文件建立更新数据库，数据库表必须含有create_at、update_at、deleted_at三个字段</li><li>更新conf配置文件</li><li>sh build.sh 执行脚本编译可执行文件执行 或 直接启动main.go运行<br><img src="https://files.mdnice.com/user/17335/23b05b19-f910-4ab1-b4e8-64d11d1a6c0c.png"></li></ol><h3 id="3-1、GET"><a href="#3-1、GET" class="headerlink" title="3.1、GET"></a>3.1、GET</h3><p><img src="https://files.mdnice.com/user/17335/e7e66ca2-a0f1-4149-b565-1adfd9104995.png"></p><h3 id="3-2、POST"><a href="#3-2、POST" class="headerlink" title="3.2、POST"></a>3.2、POST</h3><p><img src="https://files.mdnice.com/user/17335/93d0c004-3406-4d06-b04c-addf9b49291a.png"></p><h3 id="3-3、PUT"><a href="#3-3、PUT" class="headerlink" title="3.3、PUT"></a>3.3、PUT</h3><p><img src="https://files.mdnice.com/user/17335/c7dd3da7-3d77-4faa-a03e-9d36e4286621.png"></p><h3 id="3-4、DELETE"><a href="#3-4、DELETE" class="headerlink" title="3.4、DELETE"></a>3.4、DELETE</h3><p><img src="https://files.mdnice.com/user/17335/dc32b068-a2da-43dd-b3cc-5a759b63aa93.png"></p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>公众号平台更改了推送规则，如果不想错过内容，请点击  “在看”  和 “赞”，感谢支持！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器管理平台</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器管理平台（5）- 数据展示</title>
    <link href="/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%885%EF%BC%89-%20%E6%95%B0%E6%8D%AE%E5%B1%95%E7%A4%BA/"/>
    <url>/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%885%EF%BC%89-%20%E6%95%B0%E6%8D%AE%E5%B1%95%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="数据展示"><a href="#数据展示" class="headerlink" title="数据展示"></a>数据展示</h1><ol><li><strong>Grafana</strong>导入MySQL数据源进行定制化数据展示，包括品牌分类饼图，详细数据列表等</li><li><strong>LayUI</strong>为开源前端框架，对系统概览、登录日志等信息，划分不同页面使用表格展示详细数据</li></ol><h2 id="1、Grafana"><a href="#1、Grafana" class="headerlink" title="1、Grafana"></a>1、Grafana</h2><ul><li><p>对品牌、CPU型号、内存等数据使用饼图展示分类比例，详细数据使用table表格展示，支持字段筛选搜索</p></li><li><p>系统概览显示简略信息，如需查看PCI设备、逻辑磁盘等详细信息，可以点击链接跳转界面查看</p></li></ul><h3 id="1-1、导入MySQL数据源"><a href="#1-1、导入MySQL数据源" class="headerlink" title="1.1、导入MySQL数据源"></a>1.1、导入MySQL数据源</h3><ul><li>添加MySQL数据源，填写数据库地址、用户名及密码等信息<br><img src="https://files.mdnice.com/user/17335/7755058b-fcb9-423b-b876-c6765640204c.png"></li><li>填写完成后进行保存和测试</li></ul><p><img src="https://files.mdnice.com/user/17335/63176c51-ee2e-4ffa-a30c-8fb5f39179ab.png"></p><h3 id="1-2、定制化"><a href="#1-2、定制化" class="headerlink" title="1.2、定制化"></a>1.2、定制化</h3><ul><li>建立Panel进行定制化，选择图表形式，主题及SQL等，如下图为<strong>品牌分类饼状图</strong></li></ul><p><img src="https://files.mdnice.com/user/17335/6d5d7a83-b488-49bc-b959-ed461bac1592.png"></p><ul><li>历史记录明细表</li></ul><p><img src="https://files.mdnice.com/user/17335/d35fc133-fd32-4daf-a774-92af35425a25.png"></p><h3 id="1-3、数据展示"><a href="#1-3、数据展示" class="headerlink" title="1.3、数据展示"></a>1.3、数据展示</h3><ul><li><p>系统概览图<br><img src="https://files.mdnice.com/user/17335/97fe1552-ed3b-4910-aca5-1dfc22793f85.png"></p></li><li><p>PCI设备表<br><img src="https://files.mdnice.com/user/17335/2994b936-b101-4eb2-b30d-c8f9996c0cd1.png"></p></li><li><p>历史记录数据表</p></li></ul><p><img src="https://files.mdnice.com/user/17335/842206de-ebd9-419a-be11-6cc8406a9938.png"></p><h2 id="2、LayUI前端服务"><a href="#2、LayUI前端服务" class="headerlink" title="2、LayUI前端服务"></a>2、LayUI前端服务</h2><ul><li><p>对系统概览、PCI设备、登录日志等信息，划分不同页面使用表格展示详细数据</p></li><li><p>支持用户权限和密码修改，分为普通用户、系统管理员、超级管理员</p></li><li><p>支持业务IP筛选搜索、编辑、查询、删除、导出Excel、打印等功能</p></li><li><p>可参考LayUI框架官方文档进行操作</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">LayUI官网地址：https://layui.dev/        <br></code></pre></td></tr></table></figure><h3 id="2-1、认证登录流程"><a href="#2-1、认证登录流程" class="headerlink" title="2.1、认证登录流程"></a>2.1、认证登录流程</h3><p><img src="https://files.mdnice.com/user/17335/558d4c7d-cf96-416f-b965-e52a1826039e.png"></p><h3 id="2-2、前端处理流程"><a href="#2-2、前端处理流程" class="headerlink" title="2.2、前端处理流程"></a>2.2、前端处理流程</h3><p><img src="https://files.mdnice.com/user/17335/aea86717-8bcd-4f2e-a689-0a26f18504a6.png"></p><h3 id="2-3、登录界面"><a href="#2-3、登录界面" class="headerlink" title="2.3、登录界面"></a>2.3、登录界面</h3><p><img src="https://files.mdnice.com/user/17335/a5180f6c-a589-4bb2-b54f-63c6cd163280.png"></p><h3 id="2-4、业务信息界面"><a href="#2-4、业务信息界面" class="headerlink" title="2.4、业务信息界面"></a>2.4、业务信息界面</h3><ul><li><p>系统概览图<br><img src="https://files.mdnice.com/user/17335/97aa2788-0526-402f-87f6-16523cd2d985.png"></p></li><li><p>修改某条列表信息</p></li></ul><p><img src="https://files.mdnice.com/user/17335/3f6a80f3-6705-44ff-a5f4-19f8fa0bf15a.png"></p><ul><li>查看某条详细信息</li></ul><p><img src="https://files.mdnice.com/user/17335/78ed7673-bfaf-41a6-b547-6b838f654a5a.png"></p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><ul><li>欢迎关注，感谢支持！</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器管理平台</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器管理平台（4）- 信息采集上报</title>
    <link href="/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%884%EF%BC%89-%20%E4%BF%A1%E6%81%AF%E9%87%87%E9%9B%86%E4%B8%8A%E6%8A%A5/"/>
    <url>/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%884%EF%BC%89-%20%E4%BF%A1%E6%81%AF%E9%87%87%E9%9B%86%E4%B8%8A%E6%8A%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="信息采集上报"><a href="#信息采集上报" class="headerlink" title="信息采集上报"></a>信息采集上报</h1><ol><li>通过Shell脚本实现服务器CPU、内存、PCI设备、登录日志等信息定时采集和自主上报</li><li>Shell脚本比Agent更加轻量化，无侵入式实现定时采集、自主上报，对业务几乎无影响，用户侧无感知</li></ol><h2 id="1、定时上报"><a href="#1、定时上报" class="headerlink" title="1、定时上报"></a>1、定时上报</h2><blockquote><p>搭建httpd文件服务器后，将采集脚本上传至对应目录，待采集服务器下载执行即可实现自主上报</p></blockquote><ul><li>被采集服务器可使用curl或者wget进行脚本文件下载和执行</li><li>被采集服务器可使用crontab进行定时任务，指定每天12点定时执行脚本，并把执行脚本的日志写入指定文件</li><li>crontab使用方式可自行Google</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">脚本下载方式</span><br>wget http://101.43.144.88/get_info.sh | bash<br>或curl –O http://101.43.144.88/get_info.sh | bash<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">打开定时任务配置文件</span><br>crontab -e<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">指定每天12点定时执行脚本，并把执行脚本的日志写入对应文件 test.log</span><br>0 12 * * * sh demo.sh &gt; result.log<br></code></pre></td></tr></table></figure><h2 id="2、数据采集"><a href="#2、数据采集" class="headerlink" title="2、数据采集"></a>2、数据采集</h2><h3 id="2-1、系统基础信息采集"><a href="#2-1、系统基础信息采集" class="headerlink" title="2.1、系统基础信息采集"></a>2.1、系统基础信息采集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">用于开发测试环境操作系统相关信息采集</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取系统基础信息</span><br>function getSystemInfo() &#123;<br><br>    Brand=$(dmidecode -s system-manufacturer | tail -n 1)     # 品牌    Tencent Cloud<br>    Model=$(dmidecode -s system-product-name | tail -n 1)     # 型号    CVM<br>    SN=$(dmidecode -s system-serial-number | tail -n 1)       # 序列号  8541d005-a671-4736-902a-bd9b3e9a1afd<br>    #    UseFor=&quot;xxx产品&quot;                  # 用户填写<br>    CpuModel=$(cat /proc/cpuinfo | grep -i &quot;model name&quot;| head -n 1 | awk -F&#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27; | sed &#x27;s/ //g&#x27;)     # CPU型号 Intel(R)Xeon(R)Platinum8255CCPU@2.50GHz<br>    CpuNumber=$(cat /proc/cpuinfo | grep -i &quot;model name&quot; | wc -l)                        # CPU数量 2<br>    free -h<br>    if [ $? -eq 0 ]; then<br>        Memory=$(free -h |grep Mem| awk -F &quot;:  *&quot; &#x27;&#123;print $2&#125;&#x27;|awk -F &quot;  *&quot; &#x27;&#123;print $1&#125;&#x27;)       # 最大内存<br>    else<br>        # 适配Centos6<br>        number=$(free | grep Mem| awk -F &quot;:  *&quot; &#x27;&#123;print $2&#125;&#x27;| awk -F &quot;  *&quot; &#x27;&#123;print $1&#125;&#x27;)       # 最大内存<br>        Reverse $&#123;number&#125; &gt; temp.ini<br>        Memory=$(cat temp.ini)<br>    fi<br>    dmidecode -s system-product-name | tail -n 1 | grep -i &quot;VM&quot;                          # 平台类型 KVM<br><br><br>    # 2. 上报基础环境信息<br>    body=&quot;&#123;\&quot;SN\&quot;:\&quot;$SN\&quot;, \&quot;Brand\&quot;:\&quot;$Brand\&quot;, \&quot;Model\&quot;:\&quot;$Model\&quot;, \&quot;Memory\&quot;:\&quot;$Memory\&quot;, \&quot;PlatformType\&quot;:\&quot;$PlatformType\&quot;, \&quot;CpuModel\&quot;:\&quot;$CpuModel\&quot;, \&quot;CpuNumber\&quot;:\&quot;$CpuNumber\&quot;&#125;&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;JSON body :&quot;</span> <span class="hljs-variable">$body</span></span><br><br>    ret=$(curl -H &quot;System:api-gateway&quot; -H &quot;Token:czc27be93ecsz53a53fc2a8443aeebe0&quot; &quot;http://127.0.0.1:8000/api/v1/config/esunny/meta/info&quot; -XPOST -d &quot;$body&quot; -H &quot;Content-Type: application/json&quot;)<br><span class="hljs-meta prompt_"># </span><span class="language-bash">   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;MetaInfo result:&quot;</span> <span class="hljs-variable">$ret</span></span><br><br>    # 错误码不是0就表示失败，0代表成功<br>    ErrCode=$(echo $ret  | sed &#x27;s/,/\n/g&#x27; | grep &quot;ErrCode&quot; | sed &#x27;s/:/\n/g&#x27; | sed &#x27;1d&#x27;)<br>    if [[ x&quot;0&quot; != x&quot;$ErrCode&quot; ]]; then<br>        echo &quot;error| up MetaInfo to server error $ret&quot;<br>        exit 1<br>    fi<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="2-2、登陆日志采集"><a href="#2-2、登陆日志采集" class="headerlink" title="2.2、登陆日志采集"></a>2.2、登陆日志采集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">获取设备登录日志</span><br>function getLoginINfo() &#123;<br>    SN=$(dmidecode -s system-serial-number | tail -n 1)  # 序列号  8541d005-a671-4736-902a-bd9b3e9a1afd<br>    last -f /var/log/wtmp | head -3 | sed -e &#x27;/reboot/d&#x27; &gt; temp.ini          #  root  pts/1   123.149.240.130  Mon May 29 13:48 - 16:07  (02:18)<br>    cat temp.ini | while read line<br>    do<br>        UserName=$(echo $&#123;line&#125; | awk &#x27;&#123;print $1&#125;&#x27;)                                     # 登录用户名<br>        UserIp=$(echo $&#123;line&#125; | awk &#x27;&#123;print $3&#125;&#x27;)                                       # 登录源IP<br>        StartTime=$(echo $&#123;line&#125; | awk &#x27;&#123;print $5,$6,$7&#125;&#x27; | sed &#x27;s/:/ /g&#x27;)              # 登录时间<br>        EndTime=$(echo $&#123;line&#125; | awk &#x27;&#123;print $5,$6,$9&#125;&#x27; | sed &#x27;s/:/ /g&#x27;)                # 结束时间<br>        Duration=$(echo $&#123;line&#125; | awk &#x27;&#123;print $10&#125;&#x27; | sed &#x27;s/(//g&#x27; | sed &#x27;s/)//g&#x27;)      # 持续时长<br><br>        body=&quot;&#123;\&quot;SN\&quot;:\&quot;$SN\&quot;, \&quot;UserName\&quot;:\&quot;$UserName\&quot;, \&quot;UserIp\&quot;:\&quot;$UserIp\&quot;, \&quot;StartTime\&quot;:\&quot;$StartTime\&quot;, \&quot;EndTime\&quot;:\&quot;$EndTime\&quot;, \&quot;Duration\&quot;:\&quot;$Duration\&quot;&#125;&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;JSON body :&quot;</span> <span class="hljs-variable">$body</span></span><br><br>        ret=$(curl -H &quot;System:api-gateway&quot; -H &quot;Token:czc27be93ecsz53a53fc2a8443aeebe0&quot; &quot;http://127.0.0.1:8000/api/v1/config/esunny/loginInfo&quot; -XPOST -d &quot;$body&quot; -H &quot;Content-Type: application/json&quot;)<br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;result:&quot;</span> <span class="hljs-variable">$ret</span></span><br><br>        ErrCode=$(echo $ret  | sed &#x27;s/,/\n/g&#x27; | grep &quot;ErrCode&quot; | sed &#x27;s/:/\n/g&#x27; | sed &#x27;1d&#x27;)<br>        if [[ x&quot;0&quot; != x&quot;$ErrCode&quot; ]]; then<br>            echo &quot;error| up Login Info to server error $ret&quot;<br>            exit 1<br>        fi<br>    done<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-3、PCI设备信息采集"><a href="#2-3、PCI设备信息采集" class="headerlink" title="2.3、PCI设备信息采集"></a>2.3、PCI设备信息采集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">获取PCI设备信息</span><br>function getPCINfo() &#123;<br>    SN=$(dmidecode -s system-serial-number | tail -n 1)   # 序列号  8541d005-a671-4736-902a-bd9b3e9a1afd<br>    lspci -nn<br>    if [ $? -ne 0 ]; then<br>        echo &quot;skip lspci info &quot;<br>    else<br>        lspci -nn &gt; temp.ini                      # PCI设备 00:00.0 Host bridge [0600]: Intel Corporation 440FX - 82441FX PMC [Natoma] [8086:1237] (rev 02)<br>        cat temp.ini | while read line<br>        do<br>            PCIDevice=$&#123;line&#125;<br>            body=&quot;&#123;\&quot;SN\&quot;:\&quot;$SN\&quot;, \&quot;PCIDevice\&quot;:\&quot;$PCIDevice\&quot;&#125;&quot;<br>    #        echo &quot;JSON body :&quot; $body<br><br>            ret=$(curl -H &quot;System:api-gateway&quot; -H &quot;Token:czc27be93ecsz53a53fc2a8443aeebe0&quot; &quot;http://127.0.0.1:8000/api/v1/config/esunny/pciDevice&quot; -XPOST -d &quot;$body&quot; -H &quot;Content-Type: application/json&quot;)<br>    #        echo &quot;result:&quot; $ret<br><br>            ErrCode=$(echo $ret  | sed &#x27;s/,/\n/g&#x27; | grep &quot;ErrCode&quot; | sed &#x27;s/:/\n/g&#x27; | sed &#x27;1d&#x27;)<br>            if [[ x&quot;0&quot; != x&quot;$ErrCode&quot; ]]; then<br>                echo &quot;error| up PCIDevice Info to server error $ret&quot;<br>                exit 1<br>            fi<br>            sleep 0.1<br>        done<br>    fi<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="2-4、逻辑磁盘信息采集"><a href="#2-4、逻辑磁盘信息采集" class="headerlink" title="2.4、逻辑磁盘信息采集"></a>2.4、逻辑磁盘信息采集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">获取逻辑磁盘信息</span><br>function getLogicDiskInfo() &#123;<br>    SN=$(dmidecode -s system-serial-number | tail -n 1)    # 序列号  8541d005-a671-4736-902a-bd9b3e9a1afd<br>    df -h<br>    if [ $? -ne 0 ]; then<br>        echo &quot;skip logicDisk info &quot;<br>    else<br>        df -h  &gt; temp.ini                          # 逻辑磁盘 /dev/vda1        59G   16G   42G  28% /<br>        sed -i &#x27;1d&#x27; temp.ini<br><br>        cat temp.ini | while read line<br>        do<br><br>            Filesystem=$(echo $&#123;line&#125; | awk &#x27;&#123;print $1&#125;&#x27;)<br>            Size=$(echo $&#123;line&#125; | awk &#x27;&#123;print $2&#125;&#x27;)<br>            Used=$(echo $&#123;line&#125; | awk &#x27;&#123;print $3&#125;&#x27;)<br>            Avail=$(echo $&#123;line&#125; | awk &#x27;&#123;print $4&#125;&#x27;)<br>            UsePercent=$(echo $&#123;line&#125; | awk &#x27;&#123;print $5&#125;&#x27;)<br>            Mounted=$(echo $&#123;line&#125; | awk &#x27;&#123;print $6&#125;&#x27;)<br>            body=&quot;&#123;\&quot;SN\&quot;:\&quot;$SN\&quot;, \&quot;Filesystem\&quot;:\&quot;$Filesystem\&quot;, \&quot;Size\&quot;:\&quot;$Size\&quot;, \&quot;Used\&quot;:\&quot;$Used\&quot;, \&quot;Avail\&quot;:\&quot;$Avail\&quot;, \&quot;UsePercent\&quot;:\&quot;$UsePercent\&quot;, \&quot;Mounted\&quot;:\&quot;$Mounted\&quot;&#125;&quot;<br>    #        echo &quot;JSON body :&quot; $body<br><br>            ret=$(curl -H &quot;System:api-gateway&quot; -H &quot;Token:czc27be93ecsz53a53fc2a8443aeebe0&quot; &quot;http://127.0.0.1:8000/api/v1/config/esunny/logicDisk&quot; -XPOST -d &quot;$body&quot; -H &quot;Content-Type: application/json&quot;)<br>    #        echo &quot;result:&quot; $ret<br><br>            ErrCode=$(echo $ret  | sed &#x27;s/,/\n/g&#x27; | grep &quot;ErrCode&quot; | sed &#x27;s/:/\n/g&#x27; | sed &#x27;1d&#x27;)<br>            if [[ x&quot;0&quot; != x&quot;$ErrCode&quot; ]]; then<br>                echo &quot;error| up LogicalDisk Info to server error $ret&quot;<br>                exit 1<br>            fi<br>            sleep 0.1<br>        done<br>    fi<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-5、Centos6老旧系统适配"><a href="#2-5、Centos6老旧系统适配" class="headerlink" title="2.5、Centos6老旧系统适配"></a>2.5、Centos6老旧系统适配</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">dmidecode 显示格式适配</span><br>dmidecode -s system-manufacturer | tail -n 1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">/dev/mem访问权限问题</span><br>sudo chmod 777 /dev/mem<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">内存显示</span><br>free 得到数值后进行换算<br></code></pre></td></tr></table></figure><h2 id="3、功能测试"><a href="#3、功能测试" class="headerlink" title="3、功能测试"></a>3、功能测试</h2><ul><li>sh执行采集脚本文件，出现success标志，同时数据库中多个表出现对应数据，create时间和脚本执行时间一致</li></ul><p><img src="https://files.mdnice.com/user/17335/4d245c3b-52ad-4e50-b976-ab37fbb711be.png"></p><p><img src="https://files.mdnice.com/user/17335/7728d36e-a176-4be2-9f1c-82614f5b64db.png"></p><p><img src="https://files.mdnice.com/user/17335/bf1170f4-b442-49c6-a598-37b6d68756a7.png"></p><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>公众号平台更改了推送规则，如果不想错过内容，请点击  “在看”  和 “赞”，感谢支持！</p><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器管理平台</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器管理平台（6）- Utils</title>
    <link href="/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%886%EF%BC%89-%20Utils/"/>
    <url>/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0%EF%BC%886%EF%BC%89-%20Utils/</url>
    
    <content type="html"><![CDATA[<h1 id="Utils"><a href="#Utils" class="headerlink" title="Utils"></a>Utils</h1><ul><li>本篇为服务器管理平台的结篇，讲述一些必要的Util，如钉钉告警、安全加密、远程登录等功能的实现</li></ul><h2 id="1、钉钉告警"><a href="#1、钉钉告警" class="headerlink" title="1、钉钉告警"></a>1、钉钉告警</h2><h3 id="1-1、SQL配置告警规则"><a href="#1-1、SQL配置告警规则" class="headerlink" title="1.1、SQL配置告警规则"></a>1.1、SQL配置告警规则</h3><ol><li><p>逻辑磁盘容量已使用比例超过90%</p></li><li><p>超过30天未登录</p></li></ol><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>字段名称</td><td>字段类型</td><td>解释</td></tr><tr><td>Id</td><td>int</td><td>自增ID</td></tr><tr><td>Table</td><td>string</td><td>监测表名</td></tr><tr><td>Metric</td><td>string</td><td>监测指标</td></tr><tr><td>Template</td><td>string</td><td>告警模版</td></tr><tr><td>Frequency</td><td>string</td><td>告警频率</td></tr><tr><td>Threshold</td><td>string</td><td>指标阈值</td></tr><tr><td>CreatedAt</td><td>timestamp</td><td>创建时间</td></tr><tr><td>UpdatedAt</td><td>timestamp</td><td>修改时间</td></tr></tbody></table><h3 id="1-2、Shell定时轮询"><a href="#1-2、Shell定时轮询" class="headerlink" title="1.2、Shell定时轮询"></a>1.2、Shell定时轮询</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 打开定时任务配置文件</span></span><br><br>crontab -e<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 指定每个工作日上午11:10定时执行脚本，并把执行脚本的日志写入文件 result.log</span></span><br><br>10 11 * * 1,2,3,4,5 sh [alert.sh](http://alert.sh) &gt; result.log<br></code></pre></td></tr></table></figure><h3 id="1-3、核心功能函数"><a href="#1-3、核心功能函数" class="headerlink" title="1.3、核心功能函数"></a>1.3、核心功能函数</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">const</span> openUrl = <span class="hljs-string">&quot;https://oapi.dingtalk.com/robot/send?access_token=43e4ad2bcbbef692c7652b9eecca6fd51a0db9e544edcb579640e78f71259006&quot;</span><br><br><span class="hljs-comment">// NotifyHandler NotifyHandler</span><br><span class="hljs-keyword">type</span> NotifyHandler <span class="hljs-keyword">struct</span> &#123;<br>web.BaseHandler<br>&#125;<br><br><span class="hljs-comment">// POST method</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(NotifyHandler)</span></span> POST(ctx *web.Context) &#123;<br><span class="hljs-comment">//1.根据POST表单拼接SQL</span><br><span class="hljs-keyword">var</span> rules []model.AlertRule<br>rules, err := model.GetRules()<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>ctx.JSON(<span class="hljs-string">&quot;Describe AlertRule&quot;</span>, <span class="hljs-number">101</span>, err)<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-comment">//2. 查询记录匹配告警模版</span><br><span class="hljs-keyword">for</span> _, rule := <span class="hljs-keyword">range</span> rules &#123;<br><span class="hljs-keyword">switch</span> rule.Table &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&quot;es_logicaldisk&quot;</span>:<br>threshold, err := strconv.Atoi(rule.Threshold)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>ctx.JSON(<span class="hljs-string">&quot;Describe AlertRule Threshold ,table es_logicaldisk&quot;</span>, <span class="hljs-number">101</span>, err)<br><span class="hljs-keyword">return</span><br>&#125;<br>disks, err := model.GetDiskInfo(threshold)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>ctx.JSON(<span class="hljs-string">&quot;Describe GetDiskInfo Fail&quot;</span>, <span class="hljs-number">101</span>, err)<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(disks) != <span class="hljs-number">0</span> &#123;<br><span class="hljs-keyword">for</span> _, disk := <span class="hljs-keyword">range</span> disks &#123;<br>alarmStr := fmt.Sprintf(<span class="hljs-string">&quot;时间: %s\n告警标题：逻辑磁盘容量超出%v\n业务IP：%v\n序列号:%v\n磁盘：%v使用百分比%v&quot;</span>,<br>time.Now().Format(<span class="hljs-string">&quot;2006-01-02 15:04:05&quot;</span>), rule.Threshold, disk.BusinessIp, disk.SN, disk.Filesystem, disk.UsePercent)<br>err := notify.SendDingCh(openUrl, alarmStr)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>ctx.JSON(<span class="hljs-string">&quot;Describe LogicalDisk&quot;</span>, <span class="hljs-number">101</span>, err)<br><span class="hljs-keyword">return</span><br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&quot;es_logininfo&quot;</span>:<br>logins, err := model.GetLoginInfo()<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>ctx.JSON(<span class="hljs-string">&quot;Describe GetLoginInfo Fail&quot;</span>, <span class="hljs-number">101</span>, err)<br><span class="hljs-keyword">return</span><br>&#125;<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(logins) != <span class="hljs-number">0</span> &#123;<br><span class="hljs-keyword">for</span> _, login := <span class="hljs-keyword">range</span> logins &#123;<br>alarmStr := fmt.Sprintf(<span class="hljs-string">&quot;时间: %s\n告警标题：超过30天未登录\n业务IP：%v\n序列号:%v\n上次登录时间：%v\n,距今间隔：%v&quot;</span>,<br>time.Now().Format(<span class="hljs-string">&quot;2006-01-02 15:04:05&quot;</span>), login.BusinessIp, login.SN, login.StartTime, login.Interval)<br>err := notify.SendDingCh(openUrl, alarmStr)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br>ctx.JSON(<span class="hljs-string">&quot;Describe LoginInfo&quot;</span>, <span class="hljs-number">101</span>, err)<br><span class="hljs-keyword">return</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br>&#125;<br><br>ctx.JSON(fmt.Sprintf(<span class="hljs-string">&quot;ALL Alert Info Already send&quot;</span>), <span class="hljs-number">0</span>, <span class="hljs-literal">nil</span>)<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="1-4、结果验证"><a href="#1-4、结果验证" class="headerlink" title="1.4、结果验证"></a>1.4、结果验证</h3><p><img src="https://files.mdnice.com/user/17335/e0c85da8-e16e-4436-ae43-a996312eed46.png"></p><h2 id="2、数据安全加密"><a href="#2、数据安全加密" class="headerlink" title="2、数据安全加密"></a>2、数据安全加密</h2><h3 id="2-1、Token鉴权"><a href="#2-1、Token鉴权" class="headerlink" title="2.1、Token鉴权"></a>2.1、Token鉴权</h3><ul><li>根据web访问来源平台，分配不同Token进行鉴权识别，不同Token标识不同平台，权限不同，如web链接访问无删除权限</li></ul><p><img src="https://files.mdnice.com/user/17335/049f30fc-6e24-495a-89c4-42fa29568d14.png"></p><h3 id="2-2、权限分级及加密存储"><a href="#2-2、权限分级及加密存储" class="headerlink" title="2.2、权限分级及加密存储"></a>2.2、权限分级及加密存储</h3><ul><li>平台账户分级，不同权限可访问界面不同<br><img src="https://files.mdnice.com/user/17335/fe427fd0-fdc9-42d6-a6e5-a897fa2c720f.png"></li><li>账户密码加密存储<br><img src="https://files.mdnice.com/user/17335/be9e298a-a9c3-4660-8848-ad38239bd1b4.png"></li></ul><h2 id="3、远程登录"><a href="#3、远程登录" class="headerlink" title="3、远程登录"></a>3、远程登录</h2><h3 id="3-1、Ansible实现"><a href="#3-1、Ansible实现" class="headerlink" title="3.1、Ansible实现"></a>3.1、Ansible实现</h3><ul><li>安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 安装Ansible</span></span><br>    yum install -y ansible<br>    yum install -y sshpass<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 修改配置，忽略告警</span></span><br>    vim /etc/ansible/ansible.cfg<br>    <br>    [defaults]<br><br>host_key_checking = False # 第一次远程ssh主机需要将机器指纹添加到known_hosts，此设置忽略该步骤<br>    command_warnings=False  #忽略ansible执行命令的告警信息<br>    deprecation_warnings=False<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 增加test用户组</span></span><br>    vim /etc/ansible/hosts<br>    <br>    [test]<br>    127.0.0.1 ansible_ssh_user=root ansible_ssh_port=22 ansible_ssh_pass=xxx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 执行命令,验证功能</span></span><br>  ansible test -m shell -a &#x27;lspci&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 批量机器登录 + 执行shell命令</span></span><br>1. ip列表写入ip_list.ini<br>2. 执行脚本<br>    sh auto_ssh.sh $Password<br></code></pre></td></tr></table></figure></li><li>auto_ssh.sh<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>if [ -s ./result.ini ] ; then<br>    &gt; result.ini<br>fi<br><br>Password=$1<br>sed -i &#x27;/ansible_ssh/d&#x27; /etc/ansible/hosts<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加机器信息</span><br>for Ip in $(cat ip_list.ini)<br>  do<br><br>      Username=&quot;root&quot;<br>      echo -e &quot;$Ip ansible_ssh_user=$Username ansible_ssh_port=22 ansible_ssh_pass=$Password&quot; &gt;&gt; /etc/ansible/hosts<br><br>  done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">[<span class="hljs-built_in">test</span>]用户组 执行命令</span><br>ansible test -m shell -a &#x27;lspci&#x27; &gt; result.ini<br>echo &quot;All Hosts Ansible Done , please check result.ini ! ! !&quot;<br></code></pre></td></tr></table></figure></li></ul><h3 id="3-2、Expect实现"><a href="#3-2、Expect实现" class="headerlink" title="3.2、Expect实现"></a>3.2、Expect实现</h3><ul><li>安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 安装expect</span></span><br>  yum install -y expect<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 单台机器登录</span></span><br>  sh login.sh $Ip $Pwd<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 单台机器登录 + 执行shell命令</span></span><br>1. 执行命令写入execute_cmd.ini<br>2. 执行脚本<br>  sh cmd_login.sh $Ip $Pwd<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 批量机器登录 + 执行shell命令</span></span><br>1. ip列表加入ip_list.ini<br>2. 执行命令写入execute_cmd.ini<br>3. 执行脚本<br>sh list_cmd_login.sh $Pwd<br></code></pre></td></tr></table></figure></li><li>auto_ssh.sh<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/usr/bin/expect</span><br><br>set user &quot;root&quot;<br>set host [lindex $argv 0]<br>set port &quot;22&quot;<br>set password [lindex $argv 1]<br><br>spawn ssh -p$port $user@$host<br>expect &#123;<br>     &quot;*yes/no&quot; &#123; send &quot;yes\r&quot;; exp_continue &#125;<br>     &quot;*assword:&quot; &#123; send &quot;$&#123;password&#125;\r&quot; &#125;<br>        &#125;<br>interact<br></code></pre></td></tr></table></figure></li></ul><h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><ul><li>欢迎关注，感谢支持！</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器管理平台</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器网卡介绍</title>
    <link href="/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BD%91%E5%8D%A1%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/12/14/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BD%91%E5%8D%A1%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本篇文章对服务器网卡进行基础介绍，包括基本概念、网卡厂商及网卡绑定策略等。</p></blockquote><h2 id="1、基本概念"><a href="#1、基本概念" class="headerlink" title="1、基本概念"></a>1、基本概念</h2><p>服务器网卡（Network Interface Card）是一种用于连接服务器与网络之间的硬件设备。它允许服务器通过网络与其他设备进行通信，包括传输数据、接收数据和处理网络请求。</p><p>以下是一些关于服务器网卡的重要概念和特点：</p><ol><li><p>速度和带宽：服务器网卡的速度指的是其数据传输速率，通常以千兆位每秒（Gbps）或万兆位每秒（10 Gbps）为单位。较高的速度可以提供更快的数据传输和响应速度。带宽指的是网卡能够处理的数据量，通常以每秒传输的数据量（Mbps或Gbps）来衡量。</p></li><li><p>接口类型：服务器网卡通常使用不同类型的接口来连接到服务器主板。常见的接口类型包括PCIe（Peripheral Component Interconnect Express）和PCI（Peripheral Component Interconnect）。PCIe接口通常提供更高的带宽和更快的数据传输速度。</p></li><li><p>支持的协议：服务器网卡通常支持多种网络协议，如Ethernet、TCP&#x2F;IP、UDP等。这些协议允许服务器与其他设备进行通信，并实现数据传输和网络连接。</p></li><li><p>冗余和负载均衡：一些服务器网卡支持冗余配置，即在一个网卡故障时，其他网卡可以继续工作，确保服务器的稳定性和可靠性。此外，一些服务器网卡还支持负载均衡，即将网络流量分配到多个网卡上，以提高网络性能和可靠性。</p></li><li><p>硬件加速：一些高级服务器网卡具有硬件加速功能，可以在网卡上处理一些网络任务，如数据包过滤、数据包分析和加密解密等。这可以减轻服务器的负担，提高网络性能。</p></li><li><p>远程管理：一些服务器网卡具有远程管理功能，允许管理员通过远程访问服务器网卡来监控和管理服务器。这对于远程维护和故障排除非常有用。</p></li></ol><p><img src="https://files.mdnice.com/user/17335/3bcca0ba-7482-475f-98bd-7f93cab544e9.png"></p><h3 id="1-1、网卡分类"><a href="#1-1、网卡分类" class="headerlink" title="1.1、网卡分类"></a>1.1、网卡分类</h3><p><img src="https://files.mdnice.com/user/17335/281cae61-6c16-409d-99ac-799ee13eb11a.png"></p><h3 id="1-2、网卡功能"><a href="#1-2、网卡功能" class="headerlink" title="1.2、网卡功能"></a>1.2、网卡功能</h3><p><img src="https://files.mdnice.com/user/17335/d18184bd-e7ed-430a-98da-06ec85d68a21.png"></p><h3 id="1-3、网卡接口"><a href="#1-3、网卡接口" class="headerlink" title="1.3、网卡接口"></a>1.3、网卡接口</h3><p><img src="https://files.mdnice.com/user/17335/33d96b6a-c7fc-42c5-b7a2-fce0b14af995.png"></p><h2 id="2、服务器网卡"><a href="#2、服务器网卡" class="headerlink" title="2、服务器网卡"></a>2、服务器网卡</h2><p><img src="https://files.mdnice.com/user/17335/4e247fdd-d8d9-47d1-8eb5-f6f71f087e98.png"></p><h3 id="2-1、服务器专用网卡-VS-普通网卡"><a href="#2-1、服务器专用网卡-VS-普通网卡" class="headerlink" title="2.1、服务器专用网卡 VS 普通网卡"></a>2.1、服务器专用网卡 VS 普通网卡</h3><p><img src="https://files.mdnice.com/user/17335/3d04a0bd-e96e-48d8-9c2b-f74d117e1104.png"></p><h3 id="2-3、网卡主流厂商"><a href="#2-3、网卡主流厂商" class="headerlink" title="2.3、网卡主流厂商"></a>2.3、网卡主流厂商</h3><p><img src="https://files.mdnice.com/user/17335/5026838f-2dee-4816-953f-54cfd48d566d.png"></p><h2 id="3、网卡绑定（bond）"><a href="#3、网卡绑定（bond）" class="headerlink" title="3、网卡绑定（bond）"></a>3、网卡绑定（bond）</h2><p>服务器bond是一种网络连接聚合技术，通过将多个网络接口绑定在一起，形成一个虚拟的网络接口，提供更高的带宽和冗余。服务器bond可以提高服务器的网络性能和可靠性。</p><p><img src="https://files.mdnice.com/user/17335/e434395f-866b-4b02-8470-4f61ece4afc5.png"></p><blockquote><p>这里仅简单介绍下bond0和bond1这两种最常用的网卡绑定方式，其他方式如有需要可自行Google</p></blockquote><p><img src="https://files.mdnice.com/user/17335/0907ccf5-cb21-4721-a658-01958a180615.png"></p><h3 id="3-1、Bond0-轮询策略"><a href="#3-1、Bond0-轮询策略" class="headerlink" title="3.1、Bond0 轮询策略"></a>3.1、Bond0 轮询策略</h3><p><img src="https://files.mdnice.com/user/17335/ea604609-9a04-48b9-82a6-66f4197774c4.png"></p><ul><li><p><a href="https://www.zhihu.com/search?q=%E9%93%BE%E8%B7%AF%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">链路负载均衡</a>，增加带宽，支持容错，一条链路故障会自动切换正常链路。交换机需要配置聚合口，<a href="https://www.zhihu.com/search?q=%E6%80%9D%E7%A7%91&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">思科</a>叫port channel</p></li><li><p>特点：传输数据包顺序是依次传输（即：第1个包走<a href="https://www.zhihu.com/search?q=eth0&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">eth0</a>，下一个包就走eth1….一直循环下去，<a href="https://www.zhihu.com/search?q=%E7%9B%B4%E5%88%B0%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">直到最后一个</a>传输完毕），此模式提供<a href="https://www.zhihu.com/search?q=%E8%B4%9F%E8%BD%BD%E5%B9%B3%E8%A1%A1&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">负载平衡</a>和容错能力；但是我们知道如果一个连接 或者会话的<a href="https://www.zhihu.com/search?q=%E6%95%B0%E6%8D%AE%E5%8C%85&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">数据包</a>从不同的接口发出的话，中途再经过不同的链路，在<a href="https://www.zhihu.com/search?q=%E5%AE%A2%E6%88%B7%E7%AB%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">客户端</a>很有可能会出现数据包<a href="https://www.zhihu.com/search?q=%E6%97%A0%E5%BA%8F%E5%88%B0%E8%BE%BE&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">无序到达</a>的问题，而无序到达的数据包需要重新要求被发送，这样网络的吞吐量就会下降</p></li></ul><h3 id="3-2、Bond1-主备策略"><a href="#3-2、Bond1-主备策略" class="headerlink" title="3.2、Bond1 主备策略"></a>3.2、Bond1 主备策略</h3><p><img src="https://files.mdnice.com/user/17335/e3785d34-8bb4-42e4-961c-f3e9be597f26.png"></p><ul><li><p>主备模式，只有一块网卡是active，另一块是备用的standby，所有流量都在<a href="https://www.zhihu.com/search?q=active%E9%93%BE%E8%B7%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">active链路</a>上处理，交换机配置的是捆绑的话将不能工作，因为交换机往两块<a href="https://www.zhihu.com/search?q=%E7%BD%91%E5%8D%A1&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">网卡</a>发包，有一半包是丢弃的。</p></li><li><p>特点：只有一个设备处于活动状态，当一个宕掉另一个马上由备份转换为主设备。mac地址是外部可见得，从外面看来，bond的MAC地址是唯一的，以避免switch(交换机)发生混乱。此模式只提供了容错能力；由此可见此<a href="https://www.zhihu.com/search?q=%E7%AE%97%E6%B3%95&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">算法</a>的优点是可以提供高<a href="https://www.zhihu.com/search?q=%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">网络连接</a>的可用性，但是它的资源利用率较低，只有一个接口处于工作状态，在有 N 个<a href="https://www.zhihu.com/search?q=%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:%22352814803%22%7D">网络接口</a>的情况下，资源利用率为1&#x2F;N</p></li></ul><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><ul><li>公众号平台更改了推送规则，如果不想错过内容，记得读完点一下“在看”，加个“星标”，这样每次新文章推送才会第一时间出现在你的订阅列表里。</li><li>点“在看”支持我吧!</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器硬件科普</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器基础介绍</title>
    <link href="/2023/12/13/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/12/13/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%BA%E7%A1%80%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="服务器基础介绍"><a href="#服务器基础介绍" class="headerlink" title="服务器基础介绍"></a>服务器基础介绍</h1><blockquote><p>介绍服务器相关基础知识，如服务器分类、组成、机箱内部构造等</p></blockquote><h2 id="1、什么是服务器？"><a href="#1、什么是服务器？" class="headerlink" title="1、什么是服务器？"></a>1、什么是服务器？</h2><ol><li><p>服务器品牌有惠普、戴尔、浪潮、华为、华三、曙光等，各厂商服务器型号存在差异，惠普DL380G10、戴尔PowerEdge R750、浪潮NF5280M5、华为2288HV5、曙光R6230HA</p></li><li><p>一般用SN序列号和资产编号来对服务器进行标识，其中SN为唯一标识</p></li></ol><p><img src="https://files.mdnice.com/user/17335/c07e3428-9a31-49ae-ba6b-b9508933cef5.png"></p><h2 id="2、服务器演进"><a href="#2、服务器演进" class="headerlink" title="2、服务器演进"></a>2、服务器演进</h2><p><img src="https://files.mdnice.com/user/17335/5fea500a-57ef-48a5-9bd3-623a1353dd26.png"></p><h3 id="2-1、外形结构演化"><a href="#2-1、外形结构演化" class="headerlink" title="2.1、外形结构演化"></a>2.1、外形结构演化</h3><p><img src="https://files.mdnice.com/user/17335/417bae9f-220e-4e4a-b727-4284bd57ce95.png"></p><ul><li><p><strong>大型机</strong>：普通人很少接触，用于大规模计算的计算机系统.大型机通常用于政府、银行、交通、保险公司和大型制造企业。特点是处理数据能力强大、稳定性和安全性又非常高</p></li><li><p><strong>小型机</strong>：往往应用于金融、电力、电信等行业，这些用户看重的是Unix操作系统和专用服务器RAS特性、纵向扩展性和高并发访问下的出色处理能力。这些特性是普通的X86服务器很难达到的，所以在数据库等关键应用一般都采用“高大贵”的小型机方案。</p></li></ul><h3 id="2-2、服务器发展方向"><a href="#2-2、服务器发展方向" class="headerlink" title="2.2、服务器发展方向"></a>2.2、服务器发展方向</h3><p><img src="https://files.mdnice.com/user/17335/ac20f5a9-260a-4d5d-add0-215121aa9f52.png"></p><h3 id="2-3、服务器应用部署架构"><a href="#2-3、服务器应用部署架构" class="headerlink" title="2.3、服务器应用部署架构"></a>2.3、服务器应用部署架构</h3><p><img src="https://files.mdnice.com/user/17335/6dfd5c3c-c347-458c-9d54-a5cba6be2e0b.png"></p><h3 id="2-4、服务器上层软件架构"><a href="#2-4、服务器上层软件架构" class="headerlink" title="2.4、服务器上层软件架构"></a>2.4、服务器上层软件架构</h3><p><img src="https://files.mdnice.com/user/17335/c9320dbe-e26f-4335-86e3-b5387b9b05a0.png"></p><h2 id="3、服务器组成"><a href="#3、服务器组成" class="headerlink" title="3、服务器组成"></a>3、服务器组成</h2><p><img src="https://files.mdnice.com/user/17335/a8f909b4-68d5-4b68-bd7a-403ec82f27d1.png"></p><p><img src="https://files.mdnice.com/user/17335/ef66384d-1327-461a-b58b-10ce664fa426.png"></p><h3 id="3-1、服务器前面板"><a href="#3-1、服务器前面板" class="headerlink" title="3.1、服务器前面板"></a>3.1、服务器前面板</h3><ol><li><p>指示灯一般分为健康灯和指示灯，指示灯用来标记服务器，一般为UID标识；<strong>有心跳标识的一般为健康灯</strong>，用来展示服务器状态是否正常</p></li><li><p>电源按钮短按开机、长按关机，一般黄色代表没有开机、绿色或蓝色代表已经开机</p></li><li><p>前面板通风进气，机箱内部有导流槽和散热板，从后面板出气，所以一般前面板凉风习习，后面板热浪滚滚</p></li><li><p>服务器光驱可选，目前一般不配置光驱，空间阉割改造为硬盘使用</p></li><li><p>服务器硬盘一般需要做Raid后，保障冗余和安全性后进行格式化使用，按对应的按钮可以对硬盘进行插板，服务器硬盘一般为热插拔</p></li></ol><p><img src="https://files.mdnice.com/user/17335/7bd96ed7-c065-450e-82ec-08cfb4c217d3.png"></p><p><img src="https://files.mdnice.com/user/17335/3295b6e8-cb91-49fb-8b19-aac6e0d5b624.png"></p><h3 id="3-2、服务器后面板"><a href="#3-2、服务器后面板" class="headerlink" title="3.2、服务器后面板"></a>3.2、服务器后面板</h3><ol><li><p>服务器一般为双电源，即使单路掉电不影响正常使用</p></li><li><p>ILO口一般为带外管理口，可以远程对服务器进行开关机、重装系统等操作</p></li></ol><p><img src="https://files.mdnice.com/user/17335/f90faafa-bfb7-44a3-b791-5896cbbc613c.png"></p><p><img src="https://files.mdnice.com/user/17335/2ea84899-dc31-45f0-af43-0399e492f8d0.png"></p><h3 id="3-3、机箱内部"><a href="#3-3、机箱内部" class="headerlink" title="3.3、机箱内部"></a>3.3、机箱内部</h3><ol><li>机箱内部主要包括风扇、导流板、内存条、CPU、Raid卡、BMC纽扣电池等</li></ol><p><img src="https://files.mdnice.com/user/17335/47f079b1-c2a7-48a9-aec9-962e3c53238a.png"></p><h2 id="4、服务器分类"><a href="#4、服务器分类" class="headerlink" title="4、服务器分类"></a>4、服务器分类</h2><p><img src="https://files.mdnice.com/user/17335/4be73f8f-d7c1-4fc5-9a49-68c71ac240e2.png"></p><h3 id="4-1、外观分类"><a href="#4-1、外观分类" class="headerlink" title="4.1、外观分类"></a>4.1、外观分类</h3><ol><li><p>服务器按照外观可以分为机架式服务器、塔式服务器、机柜式服务器、刀片式服务器</p></li><li><p>机架式服务器则以U高度来划分，有1U、2U、3U、4U、7U、8U等高度，1U一般为4.445CM</p></li></ol><p><img src="https://files.mdnice.com/user/17335/eb061326-f4ea-4d12-b98a-83b27e27840f.png"></p><p><img src="https://files.mdnice.com/user/17335/568f25ac-124b-4f84-87b9-e449c35d05e6.png"></p><h3 id="4-2、架构分类"><a href="#4-2、架构分类" class="headerlink" title="4.2、架构分类"></a>4.2、架构分类</h3><ol><li><p>目前架构分为X86和非X86两种，X86为CISC复杂指令集，价格便宜、兼容性好，但是稳定性和安全性差，主要用在中小企业和非关键业务中；而非X86为RISC精简指令集，价格昂贵，体系封闭，但是稳定性和安全性好，主要用于金融服务、电信等行业。</p></li><li><p>X86服务器厂商为Intel和AMD，非X86一般为ARM架构，生产厂商为华为、苹果等，苹果M1芯片为ARM架构</p></li></ol><p><img src="https://files.mdnice.com/user/17335/478b574f-8a97-41fa-86d6-286efd97d368.png"></p><ul><li><p><strong>x86服务器</strong>：采用CISC架构处理器。1978年6月8日，Intel发布了一款新型的<a href="https://www.eefocus.com/baike/506860.html">微处理器</a>8086，意味着x86架构的诞生，而x86作为特定微处理器执行计算机语言的<a href="https://www.eefocus.com/baike/511008.html">指令集</a>，定义了<a href="https://www.eefocus.com/tag/%E8%8A%AF%E7%89%87/">芯片</a>的基本使用规则。</p></li><li><p><strong><a href="https://www.eefocus.com/baike/481548.html">ARM</a>服务器</strong>：ARM全称为Advanced RISC Machine，即进阶精简指令集机器。ARM是RISC微处理器的代表作之一，最大的特点在于节能。</p></li></ul><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><ul><li>公众号平台更改了推送规则，如果不想错过内容，记得读完点一下“在看”，加个“星标”，这样每次新文章推送才会第一时间出现在你的订阅列表里。</li><li>点“在看”支持我吧!</li></ul><p><img src="https://files.mdnice.com/user/17335/d74ef8ef-f9e5-47f3-ab0f-1406aa0ffe50.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>服务器硬件科普</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器操作系统介绍</title>
    <link href="/2023/12/11/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/12/11/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="1、基本概念"><a href="#1、基本概念" class="headerlink" title="1、基本概念"></a>1、基本概念</h1><blockquote><p>OS ( operating system，操作系统)是管理计算机硬件与软件资源的计算机程序，同时也是计算机系统的内核与基石。</p></blockquote><ol><li>操作系统需要处理如管理与配置内存、决定系统资源供需的优先次序、控制输入与输出设备、操作网络与管理文件系统等基本事务。</li><li>操作系统也提供一个让用户与系统交互的操作界面。它提供了一系列功能和工具，用于管理服务器的硬件资源、网络连接、安全性和应用程序的运行。</li></ol><p><img src="http://files.mdnice.com/user/17335/a333fda3-e123-4760-ac66-967100f42142.png"></p><h2 id="1-1、操作系统特点"><a href="#1-1、操作系统特点" class="headerlink" title="1.1、操作系统特点"></a>1.1、操作系统特点</h2><ol><li><p>高性能：服务器操作系统被设计用于处理大量的并发请求和数据处理。它们通常具有优化的内核和文件系统，以提供更高的性能和响应速度。</p></li><li><p>可靠性：服务器操作系统需要具备高可靠性，以确保服务器的稳定运行。它们通常具有故障恢复机制和监控工具，可以及时检测和解决问题。</p></li><li><p>安全性：服务器操作系统需要提供强大的安全性功能，以保护服务器和其中存储的数据。它们通常具有防火墙、访问控制和加密等安全机制，以防止未经授权的访问和数据泄露。</p></li><li><p>管理性：服务器操作系统提供了一系列管理工具，用于配置和管理服务器的硬件和软件资源。管理员可以通过这些工具进行远程管理、监控和故障排除。</p></li></ol><h2 id="1-2、常见服务器OS"><a href="#1-2、常见服务器OS" class="headerlink" title="1.2、常见服务器OS"></a>1.2、常见服务器OS</h2><p><img src="http://files.mdnice.com/user/17335/91f94076-0c64-41c1-801b-76e308611c26.png"></p><ol><li><p>Windows Server：微软开发的服务器操作系统，具有友好的图形界面和广泛的应用支持。每3-5年发布一个LTS长期版本</p></li><li><p>Linux：开源的操作系统，具有高度的可定制性和安全性。常见的Linux发行版包括Ubuntu、CentOS和Red Hat Enterprise Linux等。</p></li><li><p>Unix：一种类Unix操作系统，具有稳定性和安全性。常见的Unix操作系统包括Solaris和FreeBSD等。</p></li><li><p>macOS Server：苹果公司开发的服务器操作系统，适用于苹果硬件环境下的服务器部署。</p></li><li><p>Red Hat Enterprise Linux（RHEL）是一个由Red Hat开发的商业市场导向的Linux发行版。红帽公司从Red Hat Enterprise Linux 5开始对企业版Linux的每个版本提供10年支持。</p></li></ol><p><img src="http://files.mdnice.com/user/17335/83f7b97e-9eec-4415-af9c-6152d06a2bf2.png"></p><h1 id="2、OS简介"><a href="#2、OS简介" class="headerlink" title="2、OS简介"></a>2、OS简介</h1><h2 id="2-1、Windows-Server"><a href="#2-1、Windows-Server" class="headerlink" title="2.1、Windows Server"></a>2.1、Windows Server</h2><p><img src="http://files.mdnice.com/user/17335/e6e1469f-6b1d-41af-8575-b123d03ad215.png"></p><h2 id="2-2、RedHat"><a href="#2-2、RedHat" class="headerlink" title="2.2、RedHat"></a>2.2、RedHat</h2><p><img src="http://files.mdnice.com/user/17335/17145400-45f7-4b16-87cd-95e20b84dc62.png"></p><h2 id="2-3、SUSE"><a href="#2-3、SUSE" class="headerlink" title="2.3、SUSE"></a>2.3、SUSE</h2><p><img src="http://files.mdnice.com/user/17335/b4513de2-491d-446b-beec-d68b68c41393.png"></p><h1 id="3、Linux-VS-Windows"><a href="#3、Linux-VS-Windows" class="headerlink" title="3、Linux VS Windows"></a>3、Linux VS Windows</h1><p><img src="http://files.mdnice.com/user/17335/be5bdce5-4782-4740-bedb-678d7e79fe42.png"></p><h3 id="Linux优势"><a href="#Linux优势" class="headerlink" title="Linux优势"></a>Linux优势</h3><ul><li>系统开源，使用成本低</li><li>多任务多用户</li><li>内核稳定，系统资源占用小</li><li>模块化设计</li><li>可裁剪性强</li></ul><h3 id="Linux劣势"><a href="#Linux劣势" class="headerlink" title="Linux劣势"></a>Linux劣势</h3><ul><li>桌面端生态较差，推广有难度</li><li>上手难度稍高</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>服务器硬件科普</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
